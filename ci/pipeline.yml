###############################################################################
jobs:
###############################################################################

# Build and test the site
- name: build-and-test-site
  max_in_flight: 1
  public: true
  interruptible: true
  plan:
  - get: prebaked-site-image
    trigger: true
  - get: site-source
    trigger: true
  - task: build-and-test
    image: prebaked-site-image
    config:
      platform: linux
      inputs:
      - name: site-source
      outputs:
      - name: site-dist
      run:
        path: sh
        args:
        - -cx
        - |
          set -eux
          cp -r /.stack-work /site-source/.stack-work
          cd /site-source
          ./go build
          ./go test
          mv /site-source/_site /site-dist

# Create the docker image with the library dependencies pre-built
- name: build-prebaked-site-image
  max_in_flight: 1
  public: true
  interruptible: true
  plan:
  - get: prebaked-site-source
    trigger: true
  - get: base-site-image
    trigger: true
  - get: site-source
  - get: oci-build-task
  - task: build-image
    image: oci-build-task
    privileged: true
    config:
      platform: linux
      inputs:
      - name: prebaked-site-source
      - name: site-source
      outputs:
      - name: image
      params:
        DOCKERFILE: prebaked-site-source/ci/prebaked-site/Dockerfile
        UNPACK_ROOTFS: true
      run:
        path: build
  - put: prebaked-site-image
    params:
      image: image/image.tar

# Create the base docker image
- name: build-base-site-image
  max_in_flight: 1
  public: true
  interruptible: true
  plan:
  - get: base-site-source
    trigger: true
  - get: oci-build-task
  - task: build-image
    image: oci-build-task
    privileged: true
    config:
      platform: linux
      inputs:
      - name: base-site-source
      outputs:
      - name: image
      params:
        DOCKERFILE: base-site-source/ci/base-site/Dockerfile
        UNPACK_ROOTFS: true
      run:
        path: build
  - put: base-site-image
    params:
      image: image/image.tar

###############################################################################
resources:
###############################################################################

# Site source code
- name: site-source
  type: git
  icon: git
  source:
    uri: https://bitsof.thisfieldwas.green/keywordsalad/thisfieldwas.green.git
    branch: main
    ignore_paths:
    - ci/*
    - package.yaml
    - stack.yaml

# Docker image with site library dependencies pre-built
- name: prebaked-site-image
  type: registry-image
  icon: docker
  source:
    repository: registry.thisfieldwas.green/tfwg/prebaked-site
    tag: latest
    username: ((registry.username))
    password: ((registry.password))
- name: prebaked-site-source
  type: git
  icon: git
  source:
    uri: https://bitsof.thisfieldwas.green/keywordsalad/thisfieldwas.green.git
    branch: main
    paths:
    - ci/prebaked-site/*
    - package.yaml
    - stack.yaml

# Docker image with software dependencies installed
- name: base-site-image
  type: registry-image
  icon: docker
  source:
    repository: registry.thisfieldwas.green/tfwg/base-site
    tag: latest
    username: ((registry.username))
    password: ((registry.password))
- name: base-site-source
  type: git
  icon: git
  source:
    uri: https://bitsof.thisfieldwas.green/keywordsalad/thisfieldwas.green.git
    branch: main
    paths:
    - ci/base-site/*

# Docker image used to create other docker images
- name: oci-build-task
  type: registry-image
  icon: docker
  source:
    repository: concourse/oci-build-task
