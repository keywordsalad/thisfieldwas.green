code {
  color: $code-color;
  white-space: pre;
  word-wrap: normal;
  font-family: inherit;
  text-decoration: underline;

  .al { color: red; } /* Alert */
  .an { color: saddlebrown; font-weight: bold; font-style: italic; } /* Annotation */
  .at { color: darkblue; } /* Attribute */
  .bn { color: blue; } /* BaseN */
  .bu { color: steelblue; } /* Builtin */
  .cf { color: seagreen; font-weight: bold; } /* ControlFlow */
  .ch { color: yellowgreen; } /* Char */
  .cn { color: blueviolet; } /* Constant */
  .co { color: gray; font-style: italic; } /* Comment */
  .cv { color: darkgoldenrod; font-weight: bold; font-style: italic; } /* CommentVar */
  .do { color: darkgoldenrod; font-weight: bold; font-style: italic; } /* Documentation */
  .dt { color: blue; font-weight: bold; } /* DataType */
  .dv { color: darkred; } /* DecVal */
  .er { color: red; font-weight: bold; } /* Error */
  .ex { color: seagreen } /* Extension */
  .fl { color: darkred; } /* Float */
  .fu { color: seagreen; } /* Function */
  .im { color: steelblue; } /* Import */
  .in { color: steelblue; font-weight: bold; font-style: italic; } /* Information */
  .kw { color: seagreen; font-weight: bold; } /* Keyword */
  .op { color: brown; font-weight: bold; } /* Operator */
  .ot { color: slateblue; } /* Other */
  .pp { color: saddlebrown; font-style: italic; } /* Preprocessor */
  .sc { color: seagreen; } /* SpecialChar */
  .ss { color: mediumspringgreen; } /* SpecialString */
  .st { color: lightseagreen; } /* String */
  .va { color: cornflowerblue; } /* Variable */
  .vs { color: green; } /* VerbatimString */
  .wa { color: orange; font-weight: bold; font-style: italic; } /* Warning */
}

pre.sourceCode {
  margin: 1em 0;
  @include shadow-scroll-x;

  code.sourceCode {
    color: $source-code-color;
    text-decoration: none;
    display: block;
    margin: 0;
    padding: 0;
    display: flex;
    flex-direction: column;
    font-family: $code-font-family;
    font-size: $code-font-size;
    white-space: pre;
    word-wrap: normal;
    overflow-x: scroll;

    > span {
      display: block;

      &:first-child {
        padding-top: 0.3em;
      }
      &:last-child {
        padding-bottom: 0.3em;
      }

      > a:first-child {
        display: inline-block;
      }
    }
  }
}

.numberLines code.sourceCode {
  counter-reset: line-number;

  > span {
    counter-increment: line-number;
    &:target {
      background-color: $code-color-highlight;
    }

    > a:first-child {
      width: 2em;
      padding: 0 0.5em 0 0;
      margin: 0 0.5em 0 0;
      border-right: $border-style $border-color-regular $border-width-thin;
      text-align: right;
      user-select: none;
      &::before {
        content: counter(line-number);
      }
    }

    &:first-child a:first-child {
      padding-top: 0.3em;
    }

    &:last-child a:first-child {
      padding-bottom: 0.3em;
    }
  }
}

a code:not(.sourceCode) {
  color: $code-color-hyperlink;
}

.nowrap {
  overflow-x: scroll;

  code > span {
    white-space: pre;
    word-wrap: normal;
  }
}
