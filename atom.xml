<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>https://thisfieldwas.green</id>
  <title>This Field Was Green</title>
  <subtitle>I keep my field green by writing about tech and sometimes life.</subtitle>
  <icon>https://thisfieldwas.green/images/grass-256x256.png</icon>
  <link href="https://thisfieldwas.green" />
  <link rel="self" href="https://thisfieldwas.green/atom.xml" />
  <updated>2012-11-07T13:54:00-06:00</updated>
  <author>
    <name>Logan McGrath</name>
    <email>logan.mcgrath@thisfieldwas.green</email>
  </author>
  <rights>Copyright &#169; 2012-2022 Logan McGrath. All rights reserved.</rights>
  <generator uri="https://jaspervdj.be/hakyll/">Hakyll</generator>
  <entry>
      <id>https://thisfieldwas.green/blog/2021/12/11/reasons-why-my-website-is-offline</id>
      <title>Reasons why my website is offline</title>
      <updated>2021-12-11T14:43:25-08:00</updated>
      <link rel="alternate" href="https://thisfieldwas.green/blog/2021/12/11/reasons-why-my-website-is-offline" />
      <summary type="html">&lt;p&gt;My website is hosted from a 2007 HP Pavilion tower that my best friend, Vlad, a privacy buff and &lt;a href=&quot;https://internetwebsite.ofvlad.xyz&quot;&gt;low-key minimalist&lt;/a&gt;, found next to the garbage chute at his condo building.&lt;/p&gt;
</summary>
      <author>
        <name>Logan McGrath</name>
        </author>
      <content type="html">&lt;p&gt;My website is hosted from a 2007 HP Pavilion tower that my best friend, Vlad, a privacy buff and &lt;a href=&quot;https://internetwebsite.ofvlad.xyz&quot;&gt;low-key minimalist&lt;/a&gt;, found next to the garbage chute at his condo building.&lt;/p&gt;
&lt;!--more--&gt;
&lt;blockquote&gt;
&lt;p&gt;It appears to have been someone’s gaming rig in its prior life, as it has a decent graphics card in it and &lt;code&gt;8GB&lt;/code&gt; of RAM. Its abandonment was likely due to an upgrade to Windows 10, as upon boot, the login screen was so unresponsive that I could barely get the mouse to register movement and indicate for the computer to shut down again.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;I previously complained to Vlad about how untrustworthy I felt cloud providers are regarding data privacy. He finds this computer by sheer accident, and that he uses Arch Linux, btw&lt;a href=&quot;#fn1&quot; class=&quot;footnote-ref&quot; id=&quot;fnref1&quot; role=&quot;doc-noteref&quot;&gt;&lt;sup&gt;1&lt;/sup&gt;&lt;/a&gt;, so he recommends that I breathe new life into it using Arch, and to see if I can self host some of my own services.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;I present my journey into self hosting: a rant, a recipe, and a retrospective.&lt;/em&gt;&lt;/p&gt;
&lt;h2 id=&quot;tinfoil-hat-time&quot;&gt;Tinfoil hat time!&lt;/h2&gt;
&lt;p&gt;This sudden urge to self host is impulsed by the advent of &lt;a href=&quot;https://copilot.github.com/&quot;&gt;GitHub Copilot&lt;/a&gt;. The concept of it sure spooks the hell out of me. Not the idea that my professional role as a software engineer has now become so fungible that I can be replaced by a machine, I feel that is inevitable regardless, but perhaps I feel an uncomfortable rumble of an economic ripple effect.&lt;/p&gt;
&lt;h3 id=&quot;my-revulsion-is-more-nuanced-than-replacement&quot;&gt;My revulsion is more nuanced than replacement&lt;/h3&gt;
&lt;p&gt;My use of GitHub, a long-standing freemium product, has been in the form of a paid &lt;em&gt;Pro Plan&lt;/em&gt;. I pay GitHub for this tier so that I can choose to configure privileged access to certain repositories as their contents I am either paid to develop or they are personal projects that I am prototyping.&lt;/p&gt;
&lt;p&gt;Despite paying for a &lt;em&gt;Pro Plan&lt;/em&gt;, if I make those repositories publicly available, then their contents are fed into Copilot without my express consent or knowledge. These contents are then analyzed and transformed into data for which &lt;em&gt;corporations&lt;/em&gt; will be paying untold sums of money to &lt;em&gt;another, single corporation&lt;/em&gt; in order to manifest their technical means of production, &lt;em&gt;I assume&lt;/em&gt;. This means that in order to gain a competitive edge, a company must use Copilot to out-produce a competitor, paying GitHub a premium in order to do so. This creates a concentration of wealth with no clear distribution mechanism returning it to lower rungs of the economic ladder.&lt;/p&gt;
&lt;p&gt;Personally, my passion projects, my many contributions to open source, every private repository that I accidentally made public that one time… in a phrase: &lt;em&gt;my labor&lt;/em&gt;, has been consented to subsidize widening profit margins in GitHub’s favor, and even to the favor of companies using Copilot. An articulation of late stage capitalism’s twitching proboscis has lanced into another artery from which to siphon our collective value; our dessicated tissues will remain with no further need for a paycheck.&lt;/p&gt;
&lt;h3 id=&quot;i-guess-my-revulsion-is-still-about-replacement&quot;&gt;I guess my revulsion is still about replacement&lt;/h3&gt;
&lt;p&gt;In a sense I am training my replacement. For free. Or at least in exchange for &lt;em&gt;“free hosting”&lt;/em&gt; that I’m also partially paying for. At a less sleazy company I would be told that “Bob” is my inexpensive replacement, that for the next two months I will be training him, and that I will continue to be paid before I bounce to another company where I will become paid again. In this scenario, however, I go to another company and &lt;em&gt;“Bob” is already working there, and he’s using all of my stuff from the last place&lt;/em&gt;.&lt;/p&gt;
&lt;h3 id=&quot;not-all-sunshine-and-rainbows-in-the-cloud&quot;&gt;Not all sunshine and rainbows in the cloud&lt;/h3&gt;
&lt;p&gt;At this same time Apple announces that they are &lt;a href=&quot;https://towardsdatascience.com/apples-neuralhash-how-it-works-and-ways-to-break-it-577d1edc9838&quot;&gt;scanning everyone’s photos&lt;/a&gt; to make sure they don’t contain CSAM. Don’t worry, they aren’t actually looking to see if the photo contains CSAM. Until they aren’t, because someone has to verify a positive match manually. They pinky-promise they will only ever look for CSAM, even though they could look for anything they wanted, or are told to look for.&lt;/p&gt;
&lt;p&gt;I pay Apple to store my photos in the cloud. I thought they were encrypted, right? So now they’re scanning them &lt;em&gt;on my device&lt;/em&gt; because they can’t look at them on the cloud, because they’re encrypted. &lt;code&gt;wat&lt;/code&gt;.&lt;/p&gt;
&lt;h3 id=&quot;bringing-the-cloud-home&quot;&gt;Bringing the cloud home&lt;/h3&gt;
&lt;p&gt;I am very motivated to get as much of my stuff out of third party services as I can, because–to generalize based on GitHub and Apple–it’s likely that no third party can be trusted with my data &lt;em&gt;even if they are already making money off of it&lt;/em&gt;. I resolve to divest Apple and Google of my cloud data, GitHub of my source code, and &lt;code&gt;linode&lt;/code&gt; of my miscellaneous.&lt;/p&gt;
&lt;p&gt;I talk to Vlad about my feelings regarding GitHub Copilot, Apple, and cloud providers in general. He offers to help me find a new option for hosting my data. Just a few days later he finds that computer next to the garbage chute, and with much excitement he calls me and cheerfully announces, &lt;em&gt;“It turns on!”&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;What luck!&lt;/p&gt;
&lt;h2 id=&quot;keeping-my-data-in-the-closet&quot;&gt;Keeping my data in the closet&lt;/h2&gt;
&lt;p&gt;The computer sits in many pieces in my living room as I remove dust and await several shipments of spinning platter drives. Installing the array of drives to hold my media proves difficult: HP did not make this case amenable to changes or even provide much in the way of expansion bays. As a consequence, I now have a bunch of drives that are free-floating within the case. No matter though, the drives are each &lt;code&gt;4TB&lt;/code&gt;, and so heavy that they are held in place by the friction induced by their own mass and density alone. Later, for a short period, the computer carries the hostname &lt;code&gt;gravwell&lt;/code&gt; because of the density these drives give it.&lt;/p&gt;
&lt;p&gt;I craft a script so that I can reproducibly install Arch Linux with disk encryption over &lt;code&gt;ssh&lt;/code&gt;, comfortably iterating from my 2019 MacBook Pro until the installation looks correct. I nuke the computer and try again, just to be sure. Then several times more.&lt;/p&gt;
&lt;p&gt;Once the OS is installed to satisfaction, I carefully arrange the drives within the case, making sure the case can tolerate some degrees of tilt in any direction without the drives sliding out of place. To my surprise, the computer can be rotated a full 90° in any direction, and the drives don’t move &lt;em&gt;at all&lt;/em&gt;. I place the computer inside of the bedroom closet, where I can plug it directly into the router. The computer is now &lt;em&gt;closet computer&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;I spend some number of days iterating on &lt;em&gt;closet computer&lt;/em&gt; with an &lt;a href=&quot;https://bitsof.thisfieldwas.green/keywordsalad/ansibled/src/commit/2f8b5c99c51adeb2226d2e9e51cead6766448559/servers.yml#L1-L23&quot;&gt;Ansible playbook&lt;/a&gt; to get the configuration just right. As long as the data array remains intact, I can incrementally add new disks to it by appending the disks to the playbook configuration. If the data array is lost, then I can nuke it and build anew just by running the playbook. &lt;em&gt;(To be clear, I lose data if this happens.)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;My goal with this playbook is primarily to retain a living snapshot of &lt;em&gt;closet computer&lt;/em&gt;’s configuration. A secondary goal is to be able to provision a replacement system if the computer should ever cease to work. In my head I imagine the happy path for such an event looks like this:&lt;/p&gt;
&lt;ol type=&quot;1&quot;&gt;
&lt;li&gt;A few keystrokes.&lt;/li&gt;
&lt;li&gt;I then grab a coffee while the playbook runs.&lt;/li&gt;
&lt;li&gt;When the playbook is complete, I can power off the computer.&lt;/li&gt;
&lt;li&gt;I plug the drives into it.&lt;/li&gt;
&lt;li&gt;I turn on the new &lt;em&gt;closet computer&lt;/em&gt;. Huzzah.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Configuration management is Ansible’s primary domain, it does this very well, and I now use it for my current three Linux-based systems.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;I both nuke and enjoy rebuilding my Arch Linux-powered &lt;em&gt;thonkpad&lt;/em&gt; on occasion. All changes I make to it are managed through its associated playbook. I use Arch Linux, btw.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;hosting-from-inside-the-closet&quot;&gt;Hosting from inside the closet&lt;/h2&gt;
&lt;p&gt;&lt;em&gt;closet computer&lt;/em&gt; hosts a small set of services:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;My website is served by &lt;a href=&quot;https://www.nginx.com/&quot;&gt;&lt;code&gt;nginx&lt;/code&gt;&lt;/a&gt;, which also terminates &lt;code&gt;ssl&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;My source code is hosted by &lt;a href=&quot;https://gitea.io/&quot;&gt;&lt;code&gt;gitea&lt;/code&gt;&lt;/a&gt; with &lt;a href=&quot;https://postgresql.org/&quot;&gt;&lt;code&gt;postgres&lt;/code&gt;&lt;/a&gt; to support its data.&lt;/li&gt;
&lt;li&gt;My data array provides &lt;code&gt;16TB&lt;/code&gt; usable storage:
&lt;ul&gt;
&lt;li&gt;It’s &lt;a href=&quot;https://en.wikipedia.org/wiki/Non-RAID_drive_architectures#JBOD&quot;&gt;just a bunch of disks&lt;/a&gt; with redundancy provided by &lt;a href=&quot;https://www.snapraid.it/&quot;&gt;&lt;code&gt;snapraid&lt;/code&gt;&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;It’s treated as a single disk using &lt;a href=&quot;https://github.com/trapexit/mergerfs&quot;&gt;&lt;code&gt;mergerfs&lt;/code&gt;&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;It’s very nice to use, and I think a choice recommendation by Vlad.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://pi-hole.net/&quot;&gt;&lt;code&gt;pi-hole&lt;/code&gt;&lt;/a&gt;… I thought this would mean less ads, but it hasn’t really helped much.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I’m using docker containers for &lt;code&gt;gitea&lt;/code&gt; and &lt;code&gt;postgres&lt;/code&gt;. &lt;code&gt;nginx&lt;/code&gt; runs natively and provides routing into &lt;code&gt;gitea&lt;/code&gt; or static &lt;code&gt;html&lt;/code&gt; for its configured domains.&lt;/p&gt;
&lt;p&gt;I mentioned above that this computer sits in the closet. This location comes with some problems, however. For example, the closet does not have a dedicated power outlet: I have to run an extension cable from an outlet in the middle of the room and out from under the bed.&lt;/p&gt;
&lt;h2 id=&quot;reasons-why-my-website-is-offline&quot;&gt;Reasons why my website is offline&lt;/h2&gt;
&lt;p&gt;I can’t express my website’s uptime in a &lt;em&gt;magnitude of nines&lt;/em&gt;&lt;a href=&quot;#fn2&quot; class=&quot;footnote-ref&quot; id=&quot;fnref2&quot; role=&quot;doc-noteref&quot;&gt;&lt;sup&gt;2&lt;/sup&gt;&lt;/a&gt; the same way that a public safety and emergency service would&lt;a href=&quot;#fn3&quot; class=&quot;footnote-ref&quot; id=&quot;fnref3&quot; role=&quot;doc-noteref&quot;&gt;&lt;sup&gt;3&lt;/sup&gt;&lt;/a&gt;. Having &lt;em&gt;“one nines”&lt;/em&gt; uptime is really bad, and I would like to find a more impressive metric to present to someone than &lt;code&gt;9%&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Now that I think about it, &lt;em&gt;uptime&lt;/em&gt; may not be the right word to use. Let me instead paint a picture with a short and incomplete list of reasons for which my website is offline:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;My ISP had an outage.&lt;/li&gt;
&lt;li&gt;The power was out.&lt;/li&gt;
&lt;li&gt;I closed the sliding closet door too quickly, and it unplugged the router.&lt;/li&gt;
&lt;li&gt;My husband pushed a box of shoes under the bed, and it pushed the extension cable out of its plug.&lt;/li&gt;
&lt;li&gt;Instead of unplugging the router itself to turn it off and then on again, I flipped the switch on the power strip because I thought it would be less effort. I did not fully grasp that this turns off &lt;em&gt;everything&lt;/em&gt; in the closet. Consequently, I forgot to turn &lt;em&gt;closet computer&lt;/em&gt; back on.&lt;/li&gt;
&lt;li&gt;I can’t get into the &lt;code&gt;bios&lt;/code&gt; to configure &lt;em&gt;closet computer&lt;/em&gt; to turn back on when the power returns.&lt;/li&gt;
&lt;li&gt;&lt;em&gt;closet computer&lt;/em&gt; came up before the router and &lt;code&gt;autossh&lt;/code&gt; stopped trying to open the &lt;code&gt;ssh&lt;/code&gt; tunnels to the &lt;em&gt;bastion server&lt;/em&gt; after a period of time, because &lt;code&gt;systemd&lt;/code&gt; is designed to give up and stop trying.&lt;/li&gt;
&lt;li&gt;My router refuses to route any traffic whatsoever until I point DNS away from the &lt;code&gt;pi-hole&lt;/code&gt; on &lt;em&gt;closet computer&lt;/em&gt;.&lt;/li&gt;
&lt;li&gt;Hubris.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;a-hosting-solution-held-together-by-glue-and-popsicle-sticks&quot;&gt;A hosting solution held together by glue and popsicle sticks&lt;/h3&gt;
&lt;p&gt;I don’t have a static IP. My ISP’s network infrastructure simply doesn’t allow for it, as the infrastructure is based on a mesh of wireless signal that is propagated between large, unsightly antennas installed on top of each house using their service. To get around this, I swallow my pride and purchase, again, a cloud server from &lt;code&gt;linode&lt;/code&gt;. I call this one my &lt;em&gt;bastion server&lt;/em&gt;, and with it I have this sort of static IP address that I can configure my domains to point to.&lt;/p&gt;
&lt;p&gt;As I still can’t reach from the outside world into my closet, I have to perform a little magic…&lt;/p&gt;
&lt;p&gt;Using &lt;code&gt;ssh&lt;/code&gt;, I can open a &lt;a href=&quot;https://www.ssh.com/academy/ssh/tunneling/example#remote-forwarding&quot;&gt;remote tunnel&lt;/a&gt; from &lt;em&gt;closet computer&lt;/em&gt; to the &lt;em&gt;bastion server&lt;/em&gt; with this command:&lt;/p&gt;
&lt;div class=&quot;sourceCode&quot; id=&quot;cb1&quot;&gt;&lt;pre class=&quot;sourceCode numberSource bash numberLines&quot;&gt;&lt;code class=&quot;sourceCode bash&quot;&gt;&lt;span id=&quot;cb1-1&quot;&gt;&lt;a href=&quot;#cb1-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;fu&quot;&gt;ssh&lt;/span&gt; &lt;span class=&quot;at&quot;&gt;-R&lt;/span&gt; 10080:localhost:80 bastion.oflogan.xyz&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This command binds a connection to the &lt;em&gt;bastion server&lt;/em&gt;’s &lt;code&gt;localhost:10080&lt;/code&gt; port and forwards it to &lt;em&gt;closet computer&lt;/em&gt;’s &lt;code&gt;*:80&lt;/code&gt; port. You may notice that I’m using port &lt;code&gt;10080&lt;/code&gt; rather than &lt;code&gt;80&lt;/code&gt;, and this is because I am using a non-priveleged user to open the tunnel, as only &lt;code&gt;root&lt;/code&gt; may bind to ports under &lt;code&gt;1024&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Because the remote tunnel binds &lt;code&gt;localhost:10080&lt;/code&gt; on the &lt;em&gt;bastion server&lt;/em&gt;, this means that the tunnel is not accessible publicly, and that my website is still in the closet. In order for my website to come out of the closet, I use an &lt;code&gt;nginx&lt;/code&gt; &lt;a href=&quot;https://docs.nginx.com/nginx/admin-guide/load-balancer/tcp-udp-load-balancer/&quot;&gt;reverse proxy&lt;/a&gt; to forward the &lt;em&gt;bastion server&lt;/em&gt;’s public port &lt;code&gt;*:80&lt;/code&gt; to &lt;code&gt;localhost:10080&lt;/code&gt;. With this final connection made, the world can reach out and see my website coming out of the closet.&lt;/p&gt;
&lt;p&gt;I can set up reverse proxies for each port, &lt;code&gt;22&lt;/code&gt;, &lt;code&gt;80&lt;/code&gt;, and &lt;code&gt;443&lt;/code&gt;, on the &lt;em&gt;bastion server&lt;/em&gt; into reverse tunnels from &lt;em&gt;closet computer&lt;/em&gt;’s &lt;code&gt;22&lt;/code&gt;, &lt;code&gt;80&lt;/code&gt;, and &lt;code&gt;443&lt;/code&gt; ports to the &lt;em&gt;bastion server&lt;/em&gt;’s &lt;code&gt;10022&lt;/code&gt;, &lt;code&gt;10080&lt;/code&gt;, and &lt;code&gt;10443&lt;/code&gt; ports. I then leverage &lt;code&gt;autossh&lt;/code&gt; to maintain persistent remote tunnels from &lt;em&gt;closet computer&lt;/em&gt; to the &lt;em&gt;bastion server&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;This is how it looks:&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;sourceCode&quot; id=&quot;cb2&quot;&gt;&lt;pre class=&quot;sourceCode txt nowrap&quot;&gt;&lt;code class=&quot;sourceCode default&quot;&gt;&lt;span id=&quot;cb2-1&quot;&gt;&lt;a href=&quot;#cb2-1&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;         +-BASTION-SERVER--------------\&lt;/span&gt;
&lt;span id=&quot;cb2-2&quot;&gt;&lt;a href=&quot;#cb2-2&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;         | &amp;lt;=proxy=&amp;gt; | &amp;lt;===remote tunnel===&amp;gt; +-CLOSET-COMPUTER---\&lt;/span&gt;
&lt;span id=&quot;cb2-3&quot;&gt;&lt;a href=&quot;#cb2-3&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;SSH ---&amp;gt; | *:22----&amp;gt; | localhost:10022 | --&amp;gt; | *:22 SSH          |&lt;/span&gt;
&lt;span id=&quot;cb2-4&quot;&gt;&lt;a href=&quot;#cb2-4&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;HTTP --&amp;gt; | *:80----&amp;gt; | localhost:10080 | --&amp;gt; | *:80 goto 443 duh |&lt;/span&gt;
&lt;span id=&quot;cb2-5&quot;&gt;&lt;a href=&quot;#cb2-5&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;HTTPS -&amp;gt; | *:443---&amp;gt; | localhost:10443 | --&amp;gt; | *:443 my website  |&lt;/span&gt;
&lt;span id=&quot;cb2-6&quot;&gt;&lt;a href=&quot;#cb2-6&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;         `-----------+-----------------+     `-------------------+&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;It’s ok that I’m using a cloud server for this, I tell myself, because none of my data is stored on it. But also, I think I pulled off something kinda cool.&lt;/p&gt;
&lt;p&gt;This is a really fragile architecture, however. If the &lt;code&gt;ssh&lt;/code&gt; tunnels aren’t up, the site can’t be served. I can’t even get an error page out as there doesn’t seem to be a way to query for whether the reverse proxies are passing any data through. This setup is really kinda crap like that.&lt;/p&gt;
&lt;p&gt;Being what it is, &lt;code&gt;systemd&lt;/code&gt; on &lt;em&gt;closet computer&lt;/em&gt; will stop &lt;code&gt;autossh&lt;/code&gt; from retrying connections to the &lt;em&gt;bastion server&lt;/em&gt; after a certain period. This is a major problem if there’s a hiccup in the home internet connection. Sometimes my internet is out for five minutes, but that’s a tradeoff made when using a cheaper, locally-based ISP over Comcast’s cartoon villain bundled contracts. At a minimum, I need to use something other than &lt;code&gt;systemd&lt;/code&gt; to manage my &lt;code&gt;ssh&lt;/code&gt; tunnels, as it hasn’t been reliable &lt;em&gt;at all&lt;/em&gt; and is probably one of the bigger points of failure because it cascades with any failures at the router.&lt;/p&gt;
&lt;p&gt;Physically, the closet receives too much human traffic for &lt;em&gt;closet computer&lt;/em&gt; or really any hardware to be held there. We live in a modest century Craftsman whose modern infrastructure has been monkey-patched together, and I piggybacked on the convenient, pre-existing connections made by the previous homeowners, putting no thought into potential consequences therein. Now we have a closet acting as a server cabinet instead of a closet. We are, of course, using it as both, with frequent access throughout the day, and cables running everywhere, as if a panicked octopus were dropped on the floor and frozen in place.&lt;/p&gt;
&lt;h2 id=&quot;duct-tape-and-rainbows&quot;&gt;Duct tape and rainbows&lt;/h2&gt;
&lt;p&gt;I have a lot of problems hosting my website and source code from my &lt;em&gt;closet computer&lt;/em&gt; in terms of uptime. Mostly related to tripping over the power cable, though in other ways the setup isn’t resilient. It’s been a really rewarding experience nonetheless. I’m working with tech that I use all the time as a consumer, but have never myself had to engineer or maintain. It’s a fun puzzle.&lt;/p&gt;
&lt;p&gt;Hosting my website and source code myself feels very empowering. I feel as if I reclaimed a little piece of the internet. For that alone I want to see what more I can self host. The internet today clusters around a centralizing oligopoly of services, and I pine for the days when every odd person had their own small, weird website, and frequented a handful of small, niche forums, each with just enough users to be interesting. Now there’s Facebook. GitHub. Google… If I name a &lt;em&gt;thing&lt;/em&gt;: there’s likely a single site that I would go to for that &lt;em&gt;thing&lt;/em&gt;. That &lt;em&gt;thing&lt;/em&gt; has likely regressed in quality towards the mean and mediocre. And when I go to that site for that &lt;em&gt;thing&lt;/em&gt;, I can’t tell whether I’ve found the &lt;em&gt;thing&lt;/em&gt; or an ad for a subscription service that gives me access to the &lt;em&gt;thing&lt;/em&gt; at a markup.&lt;/p&gt;
&lt;figure id=&quot;closet-computer-in-context-aside&quot; class=&quot;image&quot;&gt;
  &lt;p class=&quot;content&quot;&gt;
    &lt;a href=&quot;/images/reasons-my-website-is-offline/coming-out-of-the-closet-1024x768.png&quot; class=&quot;image-link&quot;&gt;
      &lt;img src=&quot;/images/reasons-my-website-is-offline/coming-out-of-the-closet-1024x768.png&quot;
        id=&quot;closet-computer-in-context&quot;
        title=&quot;Cables and all, the &lt;em&gt;closet computer&lt;/em&gt; in context. Corey asked me to dust first.&quot;
        alt=&quot;Cables and all, the &lt;em&gt;closet computer&lt;/em&gt; in context. Corey asked me to dust first.&quot;&gt;
    &lt;/a&gt;
  &lt;/p&gt;
  &lt;figcaption&gt;Cables and all, the &lt;em&gt;closet computer&lt;/em&gt; in context. Corey asked me to dust first.&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;I severely took for granted the uptime that a third party service could give me. It’s making me rethink what the total cost of what third party hosting actually looks like, not only in terms of dollars and nebulous ideals, but more importantly in terms of peace of mind. Terms such as &lt;em&gt;will the promotion committee be able to see that writeup I referred them to?&lt;/em&gt; I would absolutely benefit from hosting my website from my &lt;em&gt;bastion server&lt;/em&gt; instead, but perhaps after I reread &lt;code&gt;linode&lt;/code&gt;’s service agreements to allay my confounding mind.&lt;/p&gt;
&lt;p&gt;Regarding nebulous ideals, Copilot makes a very strong case for treating &lt;a href=&quot;https://www.brookings.edu/blog/techtank/2018/02/21/should-we-treat-data-as-labor-lets-open-up-the-discussion/&quot;&gt;data as a form of labor&lt;/a&gt;. At the time of this writing, Wed Dec 8, 2021, Copilot is in technical review and accessible via waitlist. I can’t find any mention of licensing cost, or whether there will be a distinction between paid and community editions. If Copilot is available as an exclusively free service, then I believe it stands as an excellent reinvestment back into the community and profession as a whole. If someone is paying for Copilot, then we are collectively exploited within some legally-accepted gray area, because we agreed to be.&lt;a href=&quot;#fn4&quot; class=&quot;footnote-ref&quot; id=&quot;fnref4&quot; role=&quot;doc-noteref&quot;&gt;&lt;sup&gt;4&lt;/sup&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;stepping-back&quot;&gt;Stepping back&lt;/h2&gt;
&lt;p&gt;I still use GitHub professionally, and for open source projects hosted there. I realize that being a principled curmudgeon sometimes means that I’m only that. Obviously there also exists a sort of cognitive dissonance in regards to contributing to open source works in the context of labor. Regardless, I gave myself a learning opportunity, and I consequently don’t use GitHub as a personal consumer now. I suppose that was my goal after all.&lt;/p&gt;
&lt;p&gt;I might give Copilot a go soon. I’m reading some good things about how it cuts through boilerplate like a hot knife through butter. Reviews such as this help me conceptualize how it might fit into my own workflow, and that its role is more augmentation than replacement. Especially now that I’ve had time to step back. I would be over the moon to have an intelligent assist for the boring parts of my job. I suppose that was GitHub’s goal, too.&lt;/p&gt;
&lt;p&gt;On the lighter side, being professionally out and telling people that my website is coming out of the closet gives me a certain subversive glee that I never realized I needed. It’s a great lead into how the computer got there, too.&lt;/p&gt;
&lt;p&gt;For now, I host my source code at &lt;a href=&quot;https://bitsof.thisfieldwas.green&quot;&gt;bitsof.thisfieldwas.green&lt;/a&gt;. My website source repository is directly accessible from &lt;a href=&quot;https://bitsof.thisfieldwas.green/keywordsalad/thisfieldwas.green&quot;&gt;keywordsalad/thisfieldwas.green&lt;/a&gt;.&lt;/p&gt;
&lt;section class=&quot;footnotes&quot; role=&quot;doc-endnotes&quot;&gt;
&lt;hr /&gt;
&lt;ol&gt;
&lt;li id=&quot;fn1&quot; role=&quot;doc-endnote&quot;&gt;&lt;p&gt;Meme reference: &lt;a href=&quot;https://knowyourmeme.com/memes/btw-i-use-arch&quot;&gt;btw i use arch&lt;/a&gt; – When Vlad proofread this post, he informed me that it was customary to let the reader know that one uses Arch, btw.&lt;a href=&quot;#fnref1&quot; class=&quot;footnote-back&quot; role=&quot;doc-backlink&quot;&gt;↩︎&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li id=&quot;fn2&quot; role=&quot;doc-endnote&quot;&gt;&lt;p&gt;&lt;a href=&quot;https://aws.amazon.com/blogs/publicsector/achieving-five-nines-cloud-justice-public-safety/&quot;&gt;AWS Public Sector Blog: Achieving “five nines” in the cloud for justice and public safety&lt;/a&gt;&lt;a href=&quot;#fnref2&quot; class=&quot;footnote-back&quot; role=&quot;doc-backlink&quot;&gt;↩︎&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li id=&quot;fn3&quot; role=&quot;doc-endnote&quot;&gt;&lt;p&gt;Amazon Web Services experienced a significant outage on Tue Dec 7, 2021, and it lasted some &lt;a href=&quot;https://www.cnbc.com/2021/12/07/amazon-web-services-outage-causes-issues-at-disney-netflix-coinbase.html&quot;&gt;seven hours and thirty minutes&lt;/a&gt;, taking out large swaths of services and even preventing people from doing their jobs. This means that for 2021, AWS’s US-East-1 region had an uptime of no better than 99.9%, or &lt;em&gt;“three nines”&lt;/em&gt;. I wish for my home-spun home hosting solution to one day perform at least as well as AWS does on their bad days.&lt;a href=&quot;#fnref3&quot; class=&quot;footnote-back&quot; role=&quot;doc-backlink&quot;&gt;↩︎&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li id=&quot;fn4&quot; role=&quot;doc-endnote&quot;&gt;&lt;p&gt;There exists an episode of South Park where Kyle accepts the Apple iTunes user agreement &lt;a href=&quot;https://www.imdb.com/title/tt1884035/&quot;&gt;without reading it&lt;/a&gt;. It’s worth a watch but the writers employ a heavy-handed storytelling device to get their point across. I liked it, but you may not.&lt;a href=&quot;#fnref4&quot; class=&quot;footnote-back&quot; role=&quot;doc-backlink&quot;&gt;↩︎&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/section&gt;</content
    </entry>
  <entry>
      <id>https://thisfieldwas.green/blog/2021/12/05/redoing-my-website</id>
      <title>Redoing my website with Haskell and Hakyll</title>
      <updated>2021-12-05T08:08:32-08:00</updated>
      <link rel="alternate" href="https://thisfieldwas.green/blog/2021/12/05/redoing-my-website" />
      <summary type="html">&lt;p&gt;I’m picking up a COVID project: &lt;em&gt;Redoing my website!&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;My website prior to 2021 was authored using &lt;a href=&quot;http://octopress.org/&quot;&gt;&lt;code&gt;octopress&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;https://jekyllrb.com/&quot;&gt;&lt;code&gt;jekyll&lt;/code&gt;&lt;/a&gt;. Truthfully I don’t remember which as I haven’t touched my website in quite a few years. I want to update my homepage and I’m in a bind because I don’t know how to produce a build after I make changes.&lt;/p&gt;
</summary>
      <author>
        <name>Logan McGrath</name>
        </author>
      <content type="html">&lt;p&gt;I’m picking up a COVID project: &lt;em&gt;Redoing my website!&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;My website prior to 2021 was authored using &lt;a href=&quot;http://octopress.org/&quot;&gt;&lt;code&gt;octopress&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;https://jekyllrb.com/&quot;&gt;&lt;code&gt;jekyll&lt;/code&gt;&lt;/a&gt;. Truthfully I don’t remember which as I haven’t touched my website in quite a few years. I want to update my homepage and I’m in a bind because I don’t know how to produce a build after I make changes.&lt;/p&gt;
&lt;!--more--&gt;
&lt;p&gt;Sitting down, I try to size up the amount of housekeeping present here. I can’t quite tell what’s going on with &lt;code&gt;jekyll&lt;/code&gt;, and I know that &lt;code&gt;octopress&lt;/code&gt; &lt;a href=&quot;http://octopress.org/2015/01/15/octopress-3.0-is-coming/&quot;&gt;hasn’t been updated&lt;/a&gt; for a while. Additionally, I’m several computers removed in time since I last actively worked on my site, so I don’t have the old software handy. This work is starting to look like quite the yak shave to get some software running that I would soon have to update. I don’t mind a &lt;em&gt;good&lt;/em&gt; yak shave, however, so I’m going to find a new static site generator.&lt;/p&gt;
&lt;h2 id=&quot;wants-in-a-static-site-generator&quot;&gt;Wants in a static site generator&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Support for arbitrary static pages written in either &lt;code&gt;markdown&lt;/code&gt; or &lt;code&gt;html&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;sass&lt;/code&gt; support.&lt;/li&gt;
&lt;li&gt;Blog posts in &lt;code&gt;markdown&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Listing most recent posts.&lt;/li&gt;
&lt;li&gt;Listing all posts.&lt;/li&gt;
&lt;li&gt;Listing posts by category or tag.&lt;/li&gt;
&lt;li&gt;Some mechanism for authoring drafts and viewing them online.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Really any static site generator can meet these, but I do &lt;em&gt;enjoy&lt;/em&gt; a good yak shave. &lt;a href=&quot;https://jaspervdj.be/hakyll/&quot;&gt;hakyll&lt;/a&gt; in this regard seems like a good fit.&lt;/p&gt;
&lt;h2 id=&quot;why-hakyll-specifically&quot;&gt;Why &lt;code&gt;hakyll&lt;/code&gt;, specifically?&lt;/h2&gt;
&lt;p&gt;Briefly, let me introduce &lt;code&gt;hakyll&lt;/code&gt; as I understand it: &lt;code&gt;hakyll&lt;/code&gt; is a &lt;code&gt;jekyll&lt;/code&gt;-inspired static site generator that provides just enough tools to put together a website. Not to knock it, of course, in reality &lt;code&gt;hakyll&lt;/code&gt; is very lean but provides plenty of building blocks to deliver a no-frills blog.&lt;/p&gt;
&lt;p&gt;Naturally the primary value proposition of &lt;code&gt;hakyll&lt;/code&gt; for me is the opportunity to use Haskell for a project that isn’t entirely trivial. An &lt;em&gt;enjoyable&lt;/em&gt; and &lt;em&gt;good&lt;/em&gt; yak shave, if you will!&lt;/p&gt;
&lt;h3 id=&quot;how-to-shave-a-yak-for-hakyll&quot;&gt;How to shave a yak for &lt;code&gt;hakyll&lt;/code&gt;&lt;/h3&gt;
&lt;p&gt;If I want a sweater that’s made using a nice wool, specific stitch, and tailored to a particular fit and style, then I’m probably going to knit the sweater myself. The sweater may require that I learn about or perform any number of new things. Like how to shave a yak for wool so that I can spin the nice wool for the yarn that I will need to knit the sweater how I would like. I like to call this manual resolution of recursive dependencies a &lt;em&gt;yak shave&lt;/em&gt; when they require me to create primitive components myself.&lt;/p&gt;
&lt;p&gt;Obviously I could purchase wool yarn. Perhaps instead, in addition to knitting a sweater I hope to learn how to shave a yak in the process. I believe the experinece would be valuable, and I would have a sweater made to my own specifications by my own hands.&lt;/p&gt;
&lt;p&gt;I would like to call attention to a related and well-known cognitive bias known as the &lt;a href=&quot;https://en.wikipedia.org/wiki/IKEA_effect&quot;&gt;IKEA Effect&lt;/a&gt;. Per its name, this bias manifests in consumers of flat pack furniture: consumers will place an artificially higher value on furniture requiring manual assembly than on furniture of similar materials and build quality that is already assembled. Consumers thus will not only spend more money on flat pack furniture, they will also feel personally accomplished when they have &lt;em&gt;successfully&lt;/em&gt; assembled it.&lt;/p&gt;
&lt;p&gt;Key requirements for a &lt;em&gt;good yak shave&lt;/em&gt; are &lt;em&gt;learning&lt;/em&gt; and &lt;em&gt;value not realized elsewhere&lt;/em&gt;. Inflated value therefore may be objective in the case of a &lt;em&gt;yak shave&lt;/em&gt;, in contrast with the IKEA Effect. I personally have shaved many yaks, as unlike assembling IKEA furniture, I enjoy shaving yaks. I especially cherish my hairier yaks and hold on to them as tokens of accomplishment.&lt;/p&gt;
&lt;p&gt;My use of &lt;em&gt;yak shave&lt;/em&gt; above may imply that I delight in over-building solutions, but I assure that this is not the case. There also exists the inverse of the &lt;em&gt;good yak shave&lt;/em&gt;, and for that I employ the phrase &lt;em&gt;this is turning into a yak shave&lt;/em&gt; when I have found myself shaving a yak when what I really wanted was to buy a sweater. This phrase gets some use with tech that should “just work”, like &lt;em&gt;desktop Linux™&lt;/em&gt;, and I get particularly good mileage out of it at the office. Naturally, as yaks are big hairy beasts predisposed to high maintenance, sweaters are promptly substituted as I find them.&lt;/p&gt;
&lt;p&gt;As a rule: &lt;em&gt;I never shave a yak when the sweater is flatly the better, available option&lt;/em&gt;. The same could be said of yaks themselves as I could be reworking my website with something like &lt;a href=&quot;http://www.coboloncogs.org/INDEX.HTM&quot;&gt;COBOL ON COGS&lt;/a&gt; rather than &lt;code&gt;hakyll&lt;/code&gt;. What looks like a good &lt;em&gt;yak shave&lt;/em&gt; also risks simply becoming an endless shave with each stroke of the buzzers revealing yet another yak buried beneath the wool. There’s no shame in going back for a sweater instead, though. Yaks are big, hairy beasts after all.&lt;/p&gt;
&lt;p&gt;A &lt;em&gt;good yak shave&lt;/em&gt; gives me something abstract and something concrete. I love to learn a new skill or technology and have a usable artifact to show for it, especially when the ongoing shave to maintain it isn’t too much overhead. I hope with &lt;code&gt;hakyll&lt;/code&gt; that using Haskell will force me to learn some new programming techniques and tricks, and that I will relearn how to work with the simpler side of modern frontend web development. I don’t know yet how much yak this will require me to shave, but not knowing is half the fun!&lt;/p&gt;
&lt;h2 id=&quot;how-hakyll-accomplishes-what-i-need&quot;&gt;How &lt;code&gt;hakyll&lt;/code&gt; accomplishes what I need&lt;/h2&gt;
&lt;h3 id=&quot;inputs-and-outputs&quot;&gt;Inputs and outputs&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;hakyll&lt;/code&gt; roughly models a website as a series of transformations between inputs and outputs using the &lt;code&gt;Rules&lt;/code&gt; monad.&lt;/p&gt;
&lt;ol type=&quot;1&quot;&gt;
&lt;li&gt;&lt;code&gt;Rules&lt;/code&gt; are initialized by matching file paths by name or pattern as inputs.&lt;/li&gt;
&lt;li&gt;Per input, a &lt;code&gt;Route&lt;/code&gt; indicates an output destination.&lt;/li&gt;
&lt;li&gt;When routed, a transformation is applied by means of the &lt;code&gt;Compiler&lt;/code&gt; monad.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;strong&gt;Rules for copying images into my site&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;sourceCode&quot; id=&quot;cb1&quot;&gt;&lt;pre class=&quot;sourceCode numberSource haskell numberLines&quot;&gt;&lt;code class=&quot;sourceCode haskell&quot;&gt;&lt;span id=&quot;cb1-1&quot;&gt;&lt;a href=&quot;#cb1-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ot&quot;&gt;images ::&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Rules&lt;/span&gt; ()&lt;/span&gt;
&lt;span id=&quot;cb1-2&quot;&gt;&lt;a href=&quot;#cb1-2&quot;&gt;&lt;/a&gt;images &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-3&quot;&gt;&lt;a href=&quot;#cb1-3&quot;&gt;&lt;/a&gt;  match &lt;span class=&quot;st&quot;&gt;&amp;quot;images/**&amp;quot;&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;do&lt;/span&gt;        &lt;span class=&quot;co&quot;&gt;-- 1. match all files in the images folder&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-4&quot;&gt;&lt;a href=&quot;#cb1-4&quot;&gt;&lt;/a&gt;    route idRoute             &lt;span class=&quot;co&quot;&gt;-- 2. output image with the file name as-is&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-5&quot;&gt;&lt;a href=&quot;#cb1-5&quot;&gt;&lt;/a&gt;    compile copyFileCompiler  &lt;span class=&quot;co&quot;&gt;-- 3. copy image file from source to output as-is&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id=&quot;turning-one-thing-into-another&quot;&gt;Turning one thing into another&lt;/h3&gt;
&lt;p&gt;Compilers are cool, they’re where all the magic happens! Through compilers I use &lt;code&gt;hakyll&lt;/code&gt;’s magic to transform &lt;code&gt;markdown&lt;/code&gt; and &lt;code&gt;html&lt;/code&gt; into &lt;code&gt;html&lt;/code&gt; for viewing in a browser. &lt;code&gt;hakyll&lt;/code&gt; out-of-the-box supports multiple input and output formats, and I suspect that in addition to a plain-old technical blog I can also write a really large textbook source in &lt;code&gt;LaTeX&lt;/code&gt; and output a &lt;code&gt;pdf&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;I sense that compilers are &lt;code&gt;hakyll&lt;/code&gt;’s primary extension point, as I lean on these heavily and develop opinions as I spend time with them.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;hakyll&lt;/code&gt; very smartly tracks dependencies between each compiled artifact and, like a good modern software, only compiles artifacts when it detects changes. For example, this allows for precompiling templates early in the build pipeline and allowing multiple dependents downstream use the same built artifact.&lt;/p&gt;
&lt;h3 id=&quot;just-touching-lightly&quot;&gt;Just touching lightly&lt;/h3&gt;
&lt;p&gt;I won’t be performing a deep dive into how &lt;code&gt;hakyll&lt;/code&gt; works in this post or providing a tutorial, though I will expand on my experience later. The remainder of my post stands as a postmortem and summary of my experience transitioning to using &lt;code&gt;hakyll&lt;/code&gt; as my site generator.&lt;/p&gt;
&lt;h2 id=&quot;so-what-happened&quot;&gt;So what happened?&lt;/h2&gt;
&lt;p&gt;My website now uses for its static site generator: Haskell and &lt;code&gt;hakyll&lt;/code&gt;!&lt;/p&gt;
&lt;p&gt;I kept a small scratch list of things I &lt;em&gt;knew&lt;/em&gt; would happen but didn’t &lt;em&gt;expect&lt;/em&gt;:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Haskell compiles really slow, like &lt;em&gt;really&lt;/em&gt; slow.&lt;/li&gt;
&lt;li&gt;Compiled languages are supposed to be more productive but they don’t &lt;em&gt;feel&lt;/em&gt; that way.&lt;/li&gt;
&lt;li&gt;Just using plain-old &lt;code&gt;html&lt;/code&gt; is a tall order, aka. &lt;em&gt;Transformation Telephone&lt;/em&gt;.&lt;/li&gt;
&lt;li&gt;Templating is inexplicably difficult.&lt;/li&gt;
&lt;li&gt;Type inferencing is a real treat until it doesn’t work.&lt;/li&gt;
&lt;li&gt;Using &lt;code&gt;css&lt;/code&gt; is still like the Family Guy meme.&lt;/li&gt;
&lt;li&gt;I did not fight functional programming like I expected, I rather experienced it as an invaluable teacher.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Let me expand on these items.&lt;/p&gt;
&lt;h3 id=&quot;haskell-compiles-really-slow-like-really-slow&quot;&gt;Haskell compiles really slow, like &lt;em&gt;really&lt;/em&gt; slow&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;hakyll&lt;/code&gt; depends on the &lt;a href=&quot;https://hackage.haskell.org/package/pandoc&quot;&gt;&lt;code&gt;pandoc&lt;/code&gt;&lt;/a&gt; library for its document processing. It’s very large, and for my particular use case provides much more functionality than my website will ever need. I’m leveraging code highlighting, &lt;code&gt;html&lt;/code&gt;, and &lt;code&gt;markdown&lt;/code&gt; processing but &lt;code&gt;pandoc&lt;/code&gt; (which can be thought of as a &lt;em&gt;pan-document swiss army knife markup processing utility&lt;/em&gt; of sorts) can process pretty much everything under the sun and transform it all this-way and that-. From source it takes around 40 minutes to clean-compile on my 2019 MacBook Pro.&lt;/p&gt;
&lt;h3 id=&quot;compiled-languages-are-supposed-to-be-more-productive-but-they-dont-feel-that-way&quot;&gt;Compiled languages are supposed to be more productive but they don’t &lt;em&gt;feel&lt;/em&gt; that way&lt;/h3&gt;
&lt;p&gt;With compiled dependencies, my site takes about two minutes to clean-compile just the executable. That’s at about the upper limit of what I would consider acceptable. Changing a widely depended-on source file and then waiting two minutes for the binary to rebuild is a real grind.&lt;/p&gt;
&lt;p&gt;I never have to worry about a type error at runtime, but I do miss the quick turnaround I had with my Ruby-based site generator. I can’t say whether I was faster or slower in fact, as I wasn’t dealing with a whole class of problems related to typos alone, but it sure doesn’t feel like I’m more productive.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;UPDATE:&lt;/em&gt; Since working more in content vs. code, &lt;code&gt;hakyll&lt;/code&gt; has proven itself very snappy and resilient to errors. I hardly have to think about it as I make edits and experiment with cosmetic touches. I’m still on the fence about productivity in code, but I’m not unhappy.&lt;/p&gt;
&lt;h3 id=&quot;just-using-plain-old-html-is-a-tall-order-aka.-transformation-telephone&quot;&gt;Just using plain-old &lt;code&gt;html&lt;/code&gt; is a tall order, aka. &lt;em&gt;Transformation Telephone&lt;/em&gt;&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;pandoc&lt;/code&gt; loses some data fidelity as it transforms markup between formats. I try to use &lt;code&gt;html5&lt;/code&gt; semantic tags (&lt;code&gt;&amp;lt;aside&amp;gt;&lt;/code&gt;, &lt;code&gt;&amp;lt;figure&amp;gt;&lt;/code&gt;, and friends) as I update my existing posts and find out that &lt;code&gt;pandoc&lt;/code&gt; processes the &lt;code&gt;html&lt;/code&gt; in the &lt;code&gt;markdown&lt;/code&gt; source and removes the tags but passes the contents through mostly unchanged. Digging through &lt;code&gt;pandoc&lt;/code&gt;’s source code I discover that there is an &lt;a href=&quot;https://hackage.haskell.org/package/pandoc-types-1.22.1/docs/Text-Pandoc-Definition.html#t:Block&quot;&gt;intermediate representation&lt;/a&gt; for all documents that does not itself have the fidelity necessary to retain whether the contents of those tags represent their intended semantics. I don’t feel that I can affect a pull request to add this capability without a very large amount of work whose value serves more than my own ends.&lt;/p&gt;
&lt;h3 id=&quot;templating-is-inexplicably-difficult&quot;&gt;Templating is inexplicably difficult&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;hakyll&lt;/code&gt; does not have a good template language. I spend a few months on and off as I can squeeze time out after work so that I can write my own template language. This language provides for me the following capabilities that aren’t present by default or just aren’t very good out of the box:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Better contexts to retrieve data from compiled items in scope.&lt;/li&gt;
&lt;li&gt;Dotted field accessors along contexts.&lt;/li&gt;
&lt;li&gt;Custom template function declarations.&lt;/li&gt;
&lt;li&gt;Easy layouts driven through both metadata and special syntax.&lt;/li&gt;
&lt;li&gt;Conditionals.&lt;/li&gt;
&lt;li&gt;Loops.&lt;/li&gt;
&lt;li&gt;Default values when absent.&lt;/li&gt;
&lt;li&gt;Context literals.&lt;/li&gt;
&lt;li&gt;List literals.&lt;/li&gt;
&lt;li&gt;Syntax literals (i.e. macros and lazy evaluation).&lt;/li&gt;
&lt;li&gt;Falsy and Truthy values, even &lt;em&gt;undefined&lt;/em&gt; values!&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;All of these features give me a rather roundabout way of satisfying some of the conveniences of a dynamic language within the very stiff context of a Haskell-powered static site generator. Strapping together my own template language is a surprisingly fun, though difficult itch to scratch, and a very informative experience worth writing about in another post.&lt;/p&gt;
&lt;h3 id=&quot;type-inferencing-is-a-real-treat-until-it-doesnt-work&quot;&gt;Type inferencing is a real treat until it doesn’t work&lt;/h3&gt;
&lt;p&gt;Sometimes Haskell can’t figure out what I’m trying to tell it to do. I didn’t read any formal documentation on how Haskell’s type inferencing algorithm works specifically (the system derives from &lt;a href=&quot;https://en.wikipedia.org/wiki/Hindley%E2%80%93Milner_type_system&quot;&gt;Hindley-Milner&lt;/a&gt;, interesting stuff) but I did develop some intuition over time. Unfortunately words escape me and I can’t seem to explain how it works just yet.&lt;/p&gt;
&lt;p&gt;Occasionally I have to tell Haskell what to do, and there is a syntax for this:&lt;/p&gt;
&lt;div class=&quot;sourceCode&quot; id=&quot;cb2&quot;&gt;&lt;pre class=&quot;sourceCode numberSource haskell numberLines&quot;&gt;&lt;code class=&quot;sourceCode haskell&quot;&gt;&lt;span id=&quot;cb2-1&quot;&gt;&lt;a href=&quot;#cb2-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;-- Haskell doesn&amp;#39;t know that I mean &amp;quot;page&amp;quot; is a `String` and not `[a]`&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb2-2&quot;&gt;&lt;a href=&quot;#cb2-2&quot;&gt;&lt;/a&gt;constField &lt;span class=&quot;st&quot;&gt;&amp;quot;layout&amp;quot;&lt;/span&gt; (&lt;span class=&quot;st&quot;&gt;&amp;quot;page&amp;quot;&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt; ::&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;String&lt;/span&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;That particular instance above is due to a &lt;a href=&quot;http://dev.stephendiehl.com/hask/#overlappinginstances&quot;&gt;footgun&lt;/a&gt; I use so that lists of type &lt;code&gt;[a]&lt;/code&gt; are treated generally and &lt;code&gt;Strings&lt;/code&gt;, which are just &lt;code&gt;[Char]&lt;/code&gt;, are treated specially. Haskell can’t tell the difference in this case unless I provide the extra type information.&lt;/p&gt;
&lt;h3 id=&quot;using-css-is-still-like-the-family-guy-meme&quot;&gt;Using &lt;code&gt;css&lt;/code&gt; is still like the Family Guy meme&lt;/h3&gt;
&lt;figure id=&quot;family-guy-css-aside&quot; class=&quot;image&quot;&gt;
  &lt;p class=&quot;content&quot;&gt;
    &lt;a href=&quot;/images/redoing-my-website/family-guy-css.gif&quot; class=&quot;image-link&quot;&gt;
      &lt;img src=&quot;/images/redoing-my-website/family-guy-css.gif&quot;
        id=&quot;family-guy-css&quot;
        title=&quot;&lt;code&gt;css&lt;/code&gt;: it&#39;s still like this, but it got prettier&quot;
        alt=&quot;&lt;code&gt;css&lt;/code&gt;: it&#39;s still like this, but it got prettier&quot;&gt;
    &lt;/a&gt;
  &lt;/p&gt;
  &lt;figcaption&gt;&lt;code&gt;css&lt;/code&gt;: it&#39;s still like this, but it got prettier&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;I probably haven’t touched &lt;code&gt;css&lt;/code&gt; since 2013, which right now is about 8 years ago. It feels the same, with a few upgrades that are in very much the same vein as the old stuff. It’s still weird and clunky, at least to me. For as frustrated as I find myself with it, I am happy with how the site looks considering that I don’t particularly know what I’m doing.&lt;/p&gt;
&lt;p&gt;Despite feeling as though I’m fumbling about, I’m so proud to have figured out how to style my site so that looks great on both desktop and mobile, that it scales across multiple resolutions, but that it especially feels like I did not compromise on aesthetics or functionality. Try looking at this or other pages from desktop or phone, and try especially comparing landscape vs. portrait!&lt;/p&gt;
&lt;p&gt;I am thrilled that all major browsers’ dev tools have greatly matured, have even become on-par with each other. I’m very happy with how enabling these tools are now.&lt;/p&gt;
&lt;h3 id=&quot;i-did-not-fight-functional-programming-like-i-expected-i-rather-experienced-it-as-an-invaluable-teacher&quot;&gt;I did not fight functional programming like I expected, I rather experienced it as an invaluable teacher&lt;/h3&gt;
&lt;p&gt;I don’t get what the negative fuss about functional programming is. Everything I’ve needed help with is googleable, like everything else in tech. I rather enjoy using Haskell for what is a pretty boring problem solvable by any programming language, and on the whole I’m happy so far with my decision to use it. Learning functional programming benefits from a palate cleanser in order to fully grok, and I’m giving it an earnest shot.&lt;/p&gt;
&lt;p&gt;I’ve picked up some concepts that I imagine will find their way back into how I write code elsewhere:&lt;/p&gt;
&lt;h4 id=&quot;abstract-data-types&quot;&gt;Abstract data types&lt;/h4&gt;
&lt;p&gt;Abstract data types are the best way of implementing closed polymorphism that I’ve found thus far, and enums in object oriented languages are close enough to simulate them effectively in those languages.&lt;/p&gt;
&lt;p&gt;In my experience, polymorphism dealing with data only needs to extend over a small number of cases. By using abstract data types, I can keep my code variants local to each other, so that adding new variants requires that changes be made in-context. This ensures that no case for a polymorphic change in behavior goes unchecked. I lean on the compiler to tell me if I left any location unhandled.&lt;/p&gt;
&lt;h4 id=&quot;type-classes&quot;&gt;Type classes&lt;/h4&gt;
&lt;p&gt;Type classes are the best way of implementing open polymorphism that I’ve found thus far, and interfaces in object oriented languages are close enough to simulate them effectively in those languages.&lt;/p&gt;
&lt;p&gt;Contrasting with abstract data types, interfaces provide a facility for extending polymorphism over an open set of cases. As interfaces speak only in terms of operations, they run a much lower risk of introducing variant code paths that could introduce defects related to data.&lt;/p&gt;
&lt;h4 id=&quot;rethinking-conventional-object-oriented-programming&quot;&gt;Rethinking conventional object-oriented programming&lt;/h4&gt;
&lt;p&gt;I did not find myself reaching into my toolbox for inheritance or class-based polymorphism to solve problems. These two mechanisms are a brittle way of implementing polymorphism, I feel. I wager I could write decent Java without them, as I have been doing this for some time already in other languages.&lt;/p&gt;
&lt;h4 id=&quot;changing-the-world&quot;&gt;Changing the world&lt;/h4&gt;
&lt;p&gt;Immutability makes reasoning about data flow and change of state across an application really easy and I will leverage this everywhere I that I reasonably can.&lt;/p&gt;
&lt;p&gt;I find my mental model of objects in object-oriented programming changes starkly when I apply immutability to data. As conventionally understood, I imagine a small container of data, an &lt;em&gt;object&lt;/em&gt;, which I can modify at-will, via a provided interface of methods, in order to change its state over time. When I apply immutability as a design constraint, the concept of an &lt;em&gt;object&lt;/em&gt; as realized here is no longer a possible option.&lt;/p&gt;
&lt;p&gt;Immutability imposes a fundamental change in how business and technical capabilities within code are designed. Instead of objects as methods around mutable data, methods become organized into &lt;em&gt;modules&lt;/em&gt; containing &lt;em&gt;functions&lt;/em&gt;. Some functions act as &lt;em&gt;entry points&lt;/em&gt; into the associated capability, and they receive, usually, an abstract data type as an argument, and construct a new one as a result. Change over time can be observed without modifying state destructively, and entire classes of runtime errors, like data races, are eliminated.&lt;/p&gt;
&lt;p&gt;There are more impacts to the design of an application than I suggest here. I admit any value proposition may appear dubious on its face. Consider for a moment: state within long-running Haskell applications appears as if it were mutating. Designing for immutability thus works in production applications and I am very interested in learning more about the patterns used to support it.&lt;/p&gt;
&lt;h4 id=&quot;pattern-matching&quot;&gt;Pattern matching&lt;/h4&gt;
&lt;p&gt;Pattern matching and branching conditionally based on the &lt;em&gt;shape&lt;/em&gt; of arguments is astoundingly empowering. It elevates data into a first-class position within API design.&lt;/p&gt;
&lt;p&gt;Until recently, I can’t think of any C syntax-inspired language that takes advantage of this concept. Pattern matching may be so enabling, I think, that it might even have a measurable impact on the economy! I wish this was something that could be measured more concretely, but I’m happy even if it’s just a convenience to have.&lt;/p&gt;
&lt;h4 id=&quot;encoding-the-effect-in-result&quot;&gt;Encoding the effect in result&lt;/h4&gt;
&lt;p&gt;This is perhaps my most unexpected takeaway: Effect types make very clear that as part of the contract of a function that I am calling, some orthogonal quality in addition to a result, including whether or not I receive a result, occurs.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;f :: IO a&lt;/code&gt; will give me an &lt;code&gt;a&lt;/code&gt; if &lt;code&gt;f&lt;/code&gt; &lt;em&gt;succeeds&lt;/em&gt;. It will also affect external systems in some way, or it might &lt;em&gt;fail&lt;/em&gt; due to one. Java engineers might recall method signatures polluted with &lt;code&gt;throws IOException&lt;/code&gt;; this is same/same but different.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;g :: [a]&lt;/code&gt; will give me &lt;em&gt;one or more&lt;/em&gt; of &lt;code&gt;a&lt;/code&gt; if &lt;code&gt;g&lt;/code&gt; &lt;em&gt;succeeds&lt;/em&gt;. Effectively, &lt;code&gt;g&lt;/code&gt; &lt;em&gt;fails&lt;/em&gt; if I receive &lt;em&gt;zero&lt;/em&gt; &lt;code&gt;a&lt;/code&gt;’s. This is a sort of non-zero nondeterminism of the number of results an operation.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;h :: Maybe a&lt;/code&gt; will give me &lt;code&gt;Just a&lt;/code&gt; if an &lt;code&gt;a&lt;/code&gt; exists and it &lt;em&gt;succeeds&lt;/em&gt;. It gives me &lt;code&gt;Nothing&lt;/code&gt; otherwise and &lt;em&gt;fails&lt;/em&gt;. This is encodes an explicit presence or absence of a value. I like to think of &lt;code&gt;Maybe&lt;/code&gt; as a &lt;code&gt;null&lt;/code&gt; done right.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;i :: Either a b&lt;/code&gt; will give me &lt;code&gt;Right a&lt;/code&gt; if &lt;code&gt;i&lt;/code&gt; &lt;em&gt;succeeds&lt;/em&gt;. I receive &lt;code&gt;Left b&lt;/code&gt; if &lt;code&gt;i&lt;/code&gt; &lt;em&gt;fails&lt;/em&gt;, which allows me to inspect &lt;code&gt;b&lt;/code&gt; for why &lt;code&gt;i&lt;/code&gt; may have failed.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;An observation&lt;/strong&gt;: each of these effect types encode some notion of &lt;em&gt;success&lt;/em&gt; and &lt;em&gt;failure&lt;/em&gt;. The &lt;code&gt;Monad&lt;/code&gt; typeclass generalizes over these and this enables a high degree of code reuse, independent of specific error handling. Error handling can be pushed out to the edge of the contexts they need to be contained within, which helps keep business logic cleaner. Each of the above effect types implement the &lt;code&gt;Monad&lt;/code&gt; typeclass.&lt;/p&gt;
&lt;h2 id=&quot;i-rather-like-hakyll-and-haskell&quot;&gt;I rather like &lt;code&gt;hakyll&lt;/code&gt; and Haskell!&lt;/h2&gt;
&lt;p&gt;I’m really happy with &lt;code&gt;hakyll&lt;/code&gt;! I’m also really happy with Haskell. My website is taking some investment, but it’s been worth the effort especially given the quality of the output. I think I’m going to keep this setup for a while yet.&lt;/p&gt;</content
    </entry>
  <entry>
      <id>https://thisfieldwas.green/blog/2012/11/28/promoting-changes-with-app-config-app</id>
      <title>Promoting changes with App-Config-App</title>
      <updated>2012-11-28T13:04:00-06:00</updated>
      <link rel="alternate" href="https://thisfieldwas.green/blog/2012/11/28/promoting-changes-with-app-config-app" />
      <summary type="html">&lt;p&gt;The App-Config-App now lets you promote changes between environments!&lt;/p&gt;
</summary>
      <author>
        <name>Logan McGrath</name>
        </author>
      <content type="html">&lt;p&gt;The App-Config-App now lets you promote changes between environments!&lt;/p&gt;
&lt;!--more--&gt;
&lt;h2 id=&quot;how-does-it-work&quot;&gt;How does it work?&lt;/h2&gt;
&lt;p&gt;Perforce lets you create mappings to define the relationship between two diverging code branches. This allows for easy integration of changes between the two branches by referencing the name of the mapping.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;See &lt;a href=&quot;http://www.perforce.com/perforce/doc.current/manuals/p4v/Managing_branch_specifications.html&quot;&gt;Perforce’s documentation&lt;/a&gt; for more details on the how and why of branch mappings.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;The App-Config-App reads these branch mappings in order to create paths for promotion between environments.&lt;/p&gt;
&lt;h2 id=&quot;promoting-changes-with-app-config-app&quot;&gt;Promoting changes with App-Config-App&lt;/h2&gt;
&lt;p&gt;The App-Config-App &lt;code&gt;setup_example.rb&lt;/code&gt; creates four branches with the following mappings:&lt;/p&gt;
&lt;div class=&quot;sourceCode&quot; id=&quot;cb1&quot;&gt;&lt;pre class=&quot;sourceCode markdown&quot;&gt;&lt;code class=&quot;sourceCode markdown&quot;&gt;&lt;span id=&quot;cb1-1&quot;&gt;&lt;a href=&quot;#cb1-1&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;Mapping        Source    Destination&lt;/span&gt;
&lt;span id=&quot;cb1-2&quot;&gt;&lt;a href=&quot;#cb1-2&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;------------------------------------&lt;/span&gt;
&lt;span id=&quot;cb1-3&quot;&gt;&lt;a href=&quot;#cb1-3&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;dev-qa         dev       qa&lt;/span&gt;
&lt;span id=&quot;cb1-4&quot;&gt;&lt;a href=&quot;#cb1-4&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;qa-staging     qa        staging&lt;/span&gt;
&lt;span id=&quot;cb1-5&quot;&gt;&lt;a href=&quot;#cb1-5&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;staging-prod   staging   prod&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;If you login to App-Config-App and go to “Promote Changes,” you get an interface showing these relationships:&lt;/p&gt;
&lt;figure id=&quot;img-promote-changes-aside&quot; class=&quot;image&quot;&gt;
  &lt;p class=&quot;content&quot;&gt;
    &lt;a href=&quot;/images/app-config3/promote_changes.png&quot; class=&quot;image-link&quot;&gt;
      &lt;img src=&quot;/images/app-config3/promote_changes.png&quot;
        id=&quot;img-promote-changes&quot;
        
        &gt;
    &lt;/a&gt;
  &lt;/p&gt;
  
&lt;/figure&gt;
&lt;p&gt;Changes between environments can be promoted in either direction along a mapping configuration. The receiving environment accepts all changes (developers would know this as an ‘accept-theirs’ resolution) and you are then allowed to review the changes by clicking on the “Pending Changes” link.&lt;/p&gt;
&lt;p&gt;For example, I’ve promoted changes from “qa” to “dev”:&lt;/p&gt;
&lt;figure id=&quot;img-promote-result-aside&quot; class=&quot;image&quot;&gt;
  &lt;p class=&quot;content&quot;&gt;
    &lt;a href=&quot;/images/app-config3/promote_result.png&quot; class=&quot;image-link&quot;&gt;
      &lt;img src=&quot;/images/app-config3/promote_result.png&quot;
        id=&quot;img-promote-result&quot;
        
        &gt;
    &lt;/a&gt;
  &lt;/p&gt;
  
&lt;/figure&gt;
&lt;p&gt;I can then review the changes by clicking on “Pending Changes”:&lt;/p&gt;
&lt;figure id=&quot;img-pending-changes-aside&quot; class=&quot;image&quot;&gt;
  &lt;p class=&quot;content&quot;&gt;
    &lt;a href=&quot;/images/app-config3/pending_changes.png&quot; class=&quot;image-link&quot;&gt;
      &lt;img src=&quot;/images/app-config3/pending_changes.png&quot;
        id=&quot;img-pending-changes&quot;
        
        &gt;
    &lt;/a&gt;
  &lt;/p&gt;
  
&lt;/figure&gt;
&lt;p&gt;Changes may be edited or reverted before committing them.&lt;/p&gt;
&lt;h2 id=&quot;promoting-changes-using-p4v&quot;&gt;Promoting changes using P4V&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;http://www.perforce.com/product/components/perforce_visual_client&quot;&gt;P4V&lt;/a&gt; is the Perforce visual client. Using P4V, you have much greater control over how changes get promoted, but it requires a little more work.&lt;/p&gt;
&lt;p&gt;I’ve connected P4V to my App-Config-App user workspace to perform the same promotion from “qa” to “dev”:&lt;/p&gt;
&lt;figure id=&quot;img-config-promotion-aside&quot; class=&quot;image&quot;&gt;
  &lt;p class=&quot;content&quot;&gt;
    &lt;a href=&quot;/images/app-config3/p4v.png&quot; class=&quot;image-link&quot;&gt;
      &lt;img src=&quot;/images/app-config3/p4v.png&quot;
        id=&quot;img-config-promotion&quot;
        
        &gt;
    &lt;/a&gt;
  &lt;/p&gt;
  
&lt;/figure&gt;
&lt;p&gt;Select the “qa” folder, then from the menu bar go to “Actions” &amp;gt; “Merge/Integrate”. This will bring up a wizard for performing the integration.&lt;/p&gt;
&lt;p&gt;Select the following:&lt;/p&gt;
&lt;div class=&quot;sourceCode&quot; id=&quot;cb2&quot;&gt;&lt;pre class=&quot;sourceCode markdown&quot;&gt;&lt;code class=&quot;sourceCode markdown&quot;&gt;&lt;span id=&quot;cb2-1&quot;&gt;&lt;a href=&quot;#cb2-1&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;an&quot;&gt;Merge method:&lt;/span&gt;&lt;span class=&quot;co&quot;&gt; &amp;quot;Use branch mapping&amp;quot;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb2-2&quot;&gt;&lt;a href=&quot;#cb2-2&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;an&quot;&gt;Branch mapping:&lt;/span&gt;&lt;span class=&quot;co&quot;&gt; &amp;quot;dev-qa&amp;quot;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb2-3&quot;&gt;&lt;a href=&quot;#cb2-3&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;an&quot;&gt;Automatically resolve files after merging:&lt;/span&gt;&lt;span class=&quot;co&quot;&gt; checked&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb2-4&quot;&gt;&lt;a href=&quot;#cb2-4&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;an&quot;&gt;Resolve option:&lt;/span&gt;&lt;span class=&quot;co&quot;&gt; &amp;quot;Accept source&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;And ensure the direction of integration is “Target” &amp;lt; “Source”:&lt;/p&gt;
&lt;figure id=&quot;img-config-integrate-aside&quot; class=&quot;image&quot;&gt;
  &lt;p class=&quot;content&quot;&gt;
    &lt;a href=&quot;/images/app-config3/p4v_integrate.png&quot; class=&quot;image-link&quot;&gt;
      &lt;img src=&quot;/images/app-config3/p4v_integrate.png&quot;
        id=&quot;img-config-integrate&quot;
        
        &gt;
    &lt;/a&gt;
  &lt;/p&gt;
  
&lt;/figure&gt;
&lt;p&gt;Finally, click “Merge”. If you expand the “dev” folder, you can see the where the changes are:&lt;/p&gt;
&lt;figure id=&quot;img-config-results-aside&quot; class=&quot;image&quot;&gt;
  &lt;p class=&quot;content&quot;&gt;
    &lt;a href=&quot;/images/app-config3/p4v_integrate_result.png&quot; class=&quot;image-link&quot;&gt;
      &lt;img src=&quot;/images/app-config3/p4v_integrate_result.png&quot;
        id=&quot;img-config-results&quot;
        
        &gt;
    &lt;/a&gt;
  &lt;/p&gt;
  
&lt;/figure&gt;
&lt;p&gt;You are now free to modify the files further before finally committing the changes.&lt;/p&gt;
&lt;h3 id=&quot;how-it-compares&quot;&gt;How it compares&lt;/h3&gt;
&lt;p&gt;You get greater options when using P4V to promote changes, but producing the same result as App-Config-App’s default behavior is fairly involved. If you aren’t paying attention or don’t know what you’re doing, you might break something :(&lt;/p&gt;
&lt;h2 id=&quot;todo&quot;&gt;&lt;span class=&quot;citation&quot; data-cites=&quot;TODO&quot;&gt;@TODO&lt;/span&gt;&lt;/h2&gt;
&lt;h3 id=&quot;more-options-for-resolving-changes&quot;&gt;More options for resolving changes&lt;/h3&gt;
&lt;p&gt;When you promote changes in App-Config-App, the source changes will overwrite the destination. This behavior reduces the chance for a conflict to happen, but it means you really have to pay attention to what’s changed in the destination config and possibly edit the config further before finally committing it.&lt;/p&gt;
&lt;h3 id=&quot;conflict-resolution&quot;&gt;Conflict resolution&lt;/h3&gt;
&lt;p&gt;If a conflict occurs after promoting changes, a screen should be available for viewing and editing the conflicting changes.&lt;/p&gt;
&lt;h3 id=&quot;better-error-reporting-if-promotion-fails-due-to-permissions&quot;&gt;Better error reporting if promotion fails due to permissions&lt;/h3&gt;
&lt;p&gt;Users with read-only access to multiple environments will still be able to promote changes between them. The promotion doesn’t actually occur (the files remain unchanged) but the application doesn’t report any errors when this happens.&lt;/p&gt;</content
    </entry>
  <entry>
      <id>https://thisfieldwas.green/blog/2012/11/20/app-config-app-in-action</id>
      <title>App-Config-App in Action</title>
      <updated>2012-11-20T17:00:00-06:00</updated>
      <link rel="alternate" href="https://thisfieldwas.green/blog/2012/11/20/app-config-app-in-action" />
      <summary type="html">&lt;p&gt;Paul Hammant found this cool &lt;a href=&quot;https://github.com/lmcgrath/angular-java-server-midi&quot;&gt;Server-Side Piano&lt;/a&gt; and I’ve modified it to be configurable from a running App-Config-App. Because the sound is generated at the server, you’re able to see (hear) the Server-Side Piano change its configuration without reloading the UI.&lt;/p&gt;
</summary>
      <author>
        <name>Logan McGrath</name>
        </author>
      <content type="html">&lt;p&gt;Paul Hammant found this cool &lt;a href=&quot;https://github.com/lmcgrath/angular-java-server-midi&quot;&gt;Server-Side Piano&lt;/a&gt; and I’ve modified it to be configurable from a running App-Config-App. Because the sound is generated at the server, you’re able to see (hear) the Server-Side Piano change its configuration without reloading the UI.&lt;/p&gt;
&lt;!--more--&gt;
&lt;figure class=&quot;video&quot;&gt;
  &lt;div class=&quot;video-container&quot;&gt;
    &lt;iframe src=&quot;https://www.youtube.com/embed/hZbQhF6fsEo&quot;
      title=&quot;YouTube video player&quot;
      
      frameborder=&quot;0&quot;
      allow=&quot;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture&quot; allowfullscreen&gt;
    &lt;/iframe&gt;
  &lt;/div&gt;
  
&lt;/figure&gt;
&lt;h2 id=&quot;making-it-work-for-yourself&quot;&gt;Making it work for yourself&lt;/h2&gt;
&lt;p&gt;I’ve updated the &lt;a href=&quot;https://github.com/lmcgrath/app-config-app&quot;&gt;App-Config-App&lt;/a&gt; with additional configuration to support choosing which instrument the Server-Side Piano will play. A clean install of App-Config-App using &lt;code&gt;setup_examples.rb&lt;/code&gt; will provide everything needed to run the Server-Side Piano.&lt;/p&gt;
&lt;p&gt;The application’s configuration URL and credentials are located in &lt;code&gt;web.xml&lt;/code&gt;. Additional details may be found in the application’s &lt;a href=&quot;https://github.com/lmcgrath/angular-java-server-midi/blob/master/README.markdown&quot;&gt;README&lt;/a&gt;.&lt;/p&gt;</content
    </entry>
  <entry>
      <id>https://thisfieldwas.green/blog/2012/11/16/scm-backed-application-configuration-with-perforce</id>
      <title>SCM-Backed Application Configuration with Perforce</title>
      <updated>2012-11-16T17:00:00-06:00</updated>
      <link rel="alternate" href="https://thisfieldwas.green/blog/2012/11/16/scm-backed-application-configuration-with-perforce" />
      <summary type="html">&lt;p&gt;Continuing from my &lt;a href=&quot;/blog/2012/11/07/using-perforce-chronicle-for-application-configuration&quot;&gt;last post&lt;/a&gt;, I’ve &lt;a href=&quot;https://github.com/lmcgrath/App-Config-App/&quot;&gt;forked&lt;/a&gt; Paul Hammant’s original App-Config-App and modified it to work against Perforce. I’ve decided not to continue using Perforce Chronicle as it is primarily intended for content management.&lt;/p&gt;
</summary>
      <author>
        <name>Logan McGrath</name>
        </author>
      <content type="html">&lt;p&gt;Continuing from my &lt;a href=&quot;/blog/2012/11/07/using-perforce-chronicle-for-application-configuration&quot;&gt;last post&lt;/a&gt;, I’ve &lt;a href=&quot;https://github.com/lmcgrath/App-Config-App/&quot;&gt;forked&lt;/a&gt; Paul Hammant’s original App-Config-App and modified it to work against Perforce. I’ve decided not to continue using Perforce Chronicle as it is primarily intended for content management.&lt;/p&gt;
&lt;!--more--&gt;
&lt;p&gt;With this version, App-Config-App is written in Ruby, mostly using &lt;a href=&quot;http://www.sinatrarb.com/&quot;&gt;Sinatra&lt;/a&gt;, a lightweight web application framework. I’m still using &lt;a href=&quot;http://angularjs.org/&quot;&gt;AngularJS&lt;/a&gt;, but I’ve also added a few other things:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;A .rvmrc file, so you automagically switch to Ruby 1.9.3&lt;/li&gt;
&lt;li&gt;A Gemfile, so you don’t have to install everything individually :)&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/sinatra/sinatra-contrib&quot;&gt;Sinatra-Contrib&lt;/a&gt; for view templating support&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://nakajima.github.com/rack-flash/&quot;&gt;Rack Flash&lt;/a&gt; for flash messages&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://highline.rubyforge.org/&quot;&gt;HighLine&lt;/a&gt; for masking passwords&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://rubygems.org/gems/json&quot;&gt;json&lt;/a&gt; to manipulate JSON in native Ruby&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;getting-it-to-work.&quot;&gt;Getting it to work.&lt;/h2&gt;
&lt;p&gt;App-Config-App requires a couple things to work:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Ruby 1.9.3 and Bundler&lt;/li&gt;
&lt;li&gt;p4 - the Perforce command line client&lt;/li&gt;
&lt;li&gt;p4d - the Perforce server&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;All installation and example setup details may be found in &lt;a href=&quot;https://github.com/lmcgrath/app-config-app/blob/master/README.md&quot;&gt;App-Config-App’s README&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&quot;using-app-config-app&quot;&gt;Using App-Config-App&lt;/h2&gt;
&lt;p&gt;When you login, you should see this screen:&lt;/p&gt;
&lt;figure id=&quot;img-app-start-aside&quot; class=&quot;image&quot;&gt;
  &lt;p class=&quot;content&quot;&gt;
    &lt;a href=&quot;/images/app-config2/start.png&quot; class=&quot;image-link&quot;&gt;
      &lt;img src=&quot;/images/app-config2/start.png&quot;
        id=&quot;img-app-start&quot;
        
        &gt;
    &lt;/a&gt;
  &lt;/p&gt;
  
&lt;/figure&gt;
&lt;p&gt;You’ll notice I made the extra effort to add colors and drop shadows :D The application works from the project root in Perforce, so the files in each branch are viewable here. Clicking on “Dev” &amp;gt; “aardvark_configuration.html” will bring up a form for editing &lt;code&gt;aardvark_configuration.json&lt;/code&gt; as in the previous version:&lt;/p&gt;
&lt;figure id=&quot;img-app-config-aside&quot; class=&quot;image&quot;&gt;
  &lt;p class=&quot;content&quot;&gt;
    &lt;a href=&quot;/images/app-config2/aardvark_configuration.png&quot; class=&quot;image-link&quot;&gt;
      &lt;img src=&quot;/images/app-config2/aardvark_configuration.png&quot;
        id=&quot;img-app-config&quot;
        
        &gt;
    &lt;/a&gt;
  &lt;/p&gt;
  
&lt;/figure&gt;
&lt;p&gt;Changes to the form data are automatically saved. After making a view edits, you can click “View Diff” to get the diffs or “Revert” your changes. Go ahead and change the email address and fiddle around with the banned nicks, then go click “Pending Changes”:&lt;/p&gt;
&lt;figure id=&quot;img-app-changes-aside&quot; class=&quot;image&quot;&gt;
  &lt;p class=&quot;content&quot;&gt;
    &lt;a href=&quot;/images/app-config2/changes.png&quot; class=&quot;image-link&quot;&gt;
      &lt;img src=&quot;/images/app-config2/changes.png&quot;
        id=&quot;img-app-changes&quot;
        
        &gt;
    &lt;/a&gt;
  &lt;/p&gt;
  
&lt;/figure&gt;
&lt;p&gt;This screen shows all files that were changed and their diffs as well. You can “Revert” each file individually, and if you want to commit all changes, then enter a commit message and click “Commit Changes”. If you commit the changes and go back to “Dev” &amp;gt; “aardvark_configuration.html”, you’ll see the new values in the form:&lt;/p&gt;
&lt;figure id=&quot;image-app-commit-aside&quot; class=&quot;image&quot;&gt;
  &lt;p class=&quot;content&quot;&gt;
    &lt;a href=&quot;/images/app-config2/aardvark_configuration-changed.png&quot; class=&quot;image-link&quot;&gt;
      &lt;img src=&quot;/images/app-config2/aardvark_configuration-changed.png&quot;
        id=&quot;image-app-commit&quot;
        
        &gt;
    &lt;/a&gt;
  &lt;/p&gt;
  
&lt;/figure&gt;
&lt;h2 id=&quot;security-and-permissions&quot;&gt;Security and Permissions&lt;/h2&gt;
&lt;p&gt;Permissions and security are managed through Perforce. For users to be able to login, they must have a user and client configured in Perforce. Those users must also have permissions configured in order to view or modify files.&lt;/p&gt;
&lt;p&gt;The &lt;code&gt;setup_example.rb&lt;/code&gt; script creates three test users to demonstrate branch permissions:&lt;/p&gt;
&lt;div class=&quot;sourceCode&quot; id=&quot;cb1&quot;&gt;&lt;pre class=&quot;sourceCode markdown&quot;&gt;&lt;code class=&quot;sourceCode markdown&quot;&gt;&lt;span id=&quot;cb1-1&quot;&gt;&lt;a href=&quot;#cb1-1&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;Username        Password   Write     Read&lt;/span&gt;
&lt;span id=&quot;cb1-2&quot;&gt;&lt;a href=&quot;#cb1-2&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;-------------------------------------------------&lt;/span&gt;
&lt;span id=&quot;cb1-3&quot;&gt;&lt;a href=&quot;#cb1-3&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;sally-runtime   bananas    prod      staging, dev&lt;/span&gt;
&lt;span id=&quot;cb1-4&quot;&gt;&lt;a href=&quot;#cb1-4&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;jimmy-qa        apples     staging   dev&lt;/span&gt;
&lt;span id=&quot;cb1-5&quot;&gt;&lt;a href=&quot;#cb1-5&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;joe-developer   oranges    dev&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Logging in as any of these users will hide branches that don’t have at least read-level access, and branches that don’t have write-level access won’t allow changes.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;All users created by &lt;code&gt;setup_example.rb&lt;/code&gt; are intended only as examples.&lt;/strong&gt; In the real world, all application users should be setup with real logins and real permissions.&lt;/p&gt;
&lt;p&gt;It is this support for users and per-branch permissions that I am using Perforce as the SCM backend rather than Git.&lt;/p&gt;
&lt;h3 id=&quot;application-users&quot;&gt;Application Users&lt;/h3&gt;
&lt;p&gt;The &lt;code&gt;setup_example.rb&lt;/code&gt; script also sets up three application users to demonstrate how an application would consume configuration:&lt;/p&gt;
&lt;div class=&quot;sourceCode&quot; id=&quot;cb2&quot;&gt;&lt;pre class=&quot;sourceCode markdown&quot;&gt;&lt;code class=&quot;sourceCode markdown&quot;&gt;&lt;span id=&quot;cb2-1&quot;&gt;&lt;a href=&quot;#cb2-1&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;Username   Password   Read&lt;/span&gt;
&lt;span id=&quot;cb2-2&quot;&gt;&lt;a href=&quot;#cb2-2&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;-----------------------------&lt;/span&gt;
&lt;span id=&quot;cb2-3&quot;&gt;&lt;a href=&quot;#cb2-3&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;dev-app    s3cret1    dev&lt;/span&gt;
&lt;span id=&quot;cb2-4&quot;&gt;&lt;a href=&quot;#cb2-4&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;qa-app     s3cret2    staging&lt;/span&gt;
&lt;span id=&quot;cb2-5&quot;&gt;&lt;a href=&quot;#cb2-5&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;prod-app   s3cret3    prod&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;In theory, an application would periodically poll &lt;a href=&quot;http://localhost:9292/dev/aardvark_configuration.md5&quot;&gt;aardvark_configuration.md5&lt;/a&gt; until the hash value changed, then load &lt;a href=&quot;http://localhost:9292/dev/aardvark_configuration.json&quot;&gt;aardvark_configuration.json&lt;/a&gt; and reconfigure itself.&lt;/p&gt;
&lt;p&gt;Application user accounts are configured in Perforce like any other user. I highly recommend that application users be given ready-only access to individual files rather than entire branches.&lt;/p&gt;
&lt;h2 id=&quot;divergence&quot;&gt;Divergence&lt;/h2&gt;
&lt;p&gt;Right now, App-Config-App offers no UI tools for managing divergence and merging. Merges must be performed outside App-Config-App, and the specific safety nets to prevent nefarious change vulnerabilities are dependent on your branch specs and permissions configuration.&lt;/p&gt;
&lt;p&gt;There are also are no tools to manage conflicts of existing edits with incoming changes from another user. If a Perforce sync fails due to a conflict, you are best to revert all changes and enter them again.&lt;/p&gt;
&lt;h2 id=&quot;todo&quot;&gt;&lt;span class=&quot;citation&quot; data-cites=&quot;TODO&quot;&gt;@TODO&lt;/span&gt;&lt;/h2&gt;
&lt;h3 id=&quot;a-better-model-for-autosave&quot;&gt;A better model for autosave&lt;/h3&gt;
&lt;p&gt;Autosave in AngularJS isn’t very good. AngularJS doesn’t integrate with DOM events the way idiomatic JavaScript does, or provide a reasonable abstraction the way Dojo Toolkit or JQuery do. Right now, autosave in App-Config-App triggers with every key press in the config forms, and pummels the back-end server with ajax posts.&lt;/p&gt;
&lt;p&gt;I’ve also noticed that the autosave triggers even when a value is invalid. The first time an email address, for example, becomes invalid, AngularJS will post back the JSON, but without the invalid email address field–the invalid field is entirely left out of the JSON structure. After that, AngularJS will stop autosaving until the value is valid. There are also no measures in place to prevent a user from leaving an invalid value and saving an incomplete JSON file.&lt;/p&gt;
&lt;h3 id=&quot;a-better-model-for-validation&quot;&gt;A better model for validation&lt;/h3&gt;
&lt;p&gt;AngularJS does not offer a good validation API. The validation API is quite opaque and I haven’t found any real examples using it. The built-in form validation is inadequate. There are few ng-* HTML attributes exposing more than basic configuration parameters, and no hooks offered as extension points.&lt;/p&gt;
&lt;p&gt;For example, I’m using &lt;a href=&quot;http://docs.angularjs.org/api/ng.directive:input.text&quot;&gt;regular expressions&lt;/a&gt; for date validation in App-Config-App. There isn’t a hook to provide custom validation checks, and regular expressions don’t perform sanity checks. Values such as “00/00/0000” will pass validation.&lt;/p&gt;
&lt;h3 id=&quot;more-example-clients-than-the-java-one-needed&quot;&gt;More example clients than the Java one needed&lt;/h3&gt;
&lt;p&gt;The &lt;a href=&quot;https://github.com/lmcgrath/app-config-java&quot;&gt;App-Config-Java&lt;/a&gt; client is enough to show the basic idea behind caching and reloading configuration from App-Config-App. I would like to create a few more examples in a couple different platforms, possibly also showcasing “&lt;a href=&quot;http://paulhammant.com/2012/07/10/app-config-workflow-using-scm/&quot;&gt;hot reconfiguration&lt;/a&gt;” for feature toggles.&lt;/p&gt;
&lt;h3 id=&quot;someone-should-port-this-to-subversion-or-tfs&quot;&gt;Someone should port this to Subversion or TFS&lt;/h3&gt;
&lt;p&gt;App-Config-App should be usable by the largest possible audience. For instance, if you’re using Subversion, then you should be able to take advantage of the existing infrastructure.&lt;/p&gt;
&lt;p&gt;The reason I point out Subversion and TFS is largely due to support of per-branch permissions.&lt;/p&gt;</content
    </entry>
  <entry>
      <id>https://thisfieldwas.green/blog/2012/11/07/using-perforce-chronicle-for-application-configuration</id>
      <title>Using Perforce Chronicle for application configuration</title>
      <updated>2012-11-07T13:54:00-06:00</updated>
      <link rel="alternate" href="https://thisfieldwas.green/blog/2012/11/07/using-perforce-chronicle-for-application-configuration" />
      <summary type="html">&lt;p&gt;Following Paul Hammant’s post &lt;a href=&quot;http://paulhammant.com/2012/07/10/app-config-workflow-using-scm/&quot;&gt;App-config workflow using SCM&lt;/a&gt; and subsequent &lt;a href=&quot;http://paulhammant.com/2012/08/14/app-config-using-git-and-angular/&quot;&gt;proof of concept&lt;/a&gt; backed by Git, I will show that an app-config application backed by Perforce is possible using &lt;a href=&quot;http://www.perforce.com/products/chronicle&quot;&gt;Perforce Chronicle&lt;/a&gt;.&lt;/p&gt;
</summary>
      <author>
        <name>Logan McGrath</name>
        </author>
      <content type="html">&lt;p&gt;Following Paul Hammant’s post &lt;a href=&quot;http://paulhammant.com/2012/07/10/app-config-workflow-using-scm/&quot;&gt;App-config workflow using SCM&lt;/a&gt; and subsequent &lt;a href=&quot;http://paulhammant.com/2012/08/14/app-config-using-git-and-angular/&quot;&gt;proof of concept&lt;/a&gt; backed by Git, I will show that an app-config application backed by Perforce is possible using &lt;a href=&quot;http://www.perforce.com/products/chronicle&quot;&gt;Perforce Chronicle&lt;/a&gt;.&lt;/p&gt;
&lt;!--more--&gt;
&lt;h2 id=&quot;perforce-and-permissions-for-branches&quot;&gt;Perforce and permissions for branches&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;http://en.wikipedia.org/wiki/Perforce&quot;&gt;Perforce&lt;/a&gt; is an enterprise-class source control management (SCM) system, remarkably similar to Subversion (Subversion was inspired by Perforce :) Perforce is more bulletproof than Subversion in many ways and it’s generally faster. Git does not impose any security constraints or permissions on branches, Perforce gives comprehensive security options allowing you to control access to different branches: for example, development, staging, and production. Subversion, however, can support permissions on branches with some extra configuration (Apache plus mod_dav_svn/mod_dav_authz). For these reasons, Perforce is a better option for storing configuration data than either Git or Subversion.&lt;/p&gt;
&lt;h2 id=&quot;perforce-cms-as-an-application-server&quot;&gt;Perforce CMS as an application server&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;http://www.perforce.com/products/chronicle&quot;&gt;Perforce Chronicle&lt;/a&gt; is a content management system (CMS) using Perforce as the back-end store for configuration and content. The app-config application is built on top of Chronicle because Perforce does not offer a web view into the depot the way Subversion can through Apache. Branching and maintaining divergence between environments can be managed through the user interface, and Chronicle provides user authentication and management, so access between different configuration files can be restricted appropriately. The INSTALL.txt file that is distributed with Chronicle helps with an easy install, mine being set up to run locally from &lt;code&gt;http://localhost&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;There is a key issue in using Chronicle, however. The system is designed for the management of &lt;em&gt;content&lt;/em&gt; and not necessarily arbitrary &lt;em&gt;files&lt;/em&gt;. In order to make the app-config application work, I had to add a custom content type and write a module. Configuration and HTML are both plain-text content, so I created a ” Plain Text” content type with the fields &lt;em&gt;title&lt;/em&gt; and &lt;em&gt;content&lt;/em&gt;:&lt;/p&gt;
&lt;ol type=&quot;1&quot;&gt;
&lt;li&gt;Go to “Manage” &amp;gt; “Content Types”&lt;/li&gt;
&lt;li&gt;Click “Add Content Type”&lt;/li&gt;
&lt;li&gt;Enter the following information:&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&quot;sourceCode&quot; id=&quot;cb1&quot;&gt;&lt;pre class=&quot;sourceCode numberSource ini numberLines&quot;&gt;&lt;code class=&quot;sourceCode ini&quot;&gt;&lt;span id=&quot;cb1-1&quot;&gt;&lt;a href=&quot;#cb1-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;dt&quot;&gt;Id:       plaintext&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-2&quot;&gt;&lt;a href=&quot;#cb1-2&quot;&gt;&lt;/a&gt;&lt;span class=&quot;dt&quot;&gt;Label:    Plain Text&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-3&quot;&gt;&lt;a href=&quot;#cb1-3&quot;&gt;&lt;/a&gt;&lt;span class=&quot;dt&quot;&gt;Group:    Assets&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-4&quot;&gt;&lt;a href=&quot;#cb1-4&quot;&gt;&lt;/a&gt;&lt;span class=&quot;dt&quot;&gt;Elements:&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-5&quot;&gt;&lt;a href=&quot;#cb1-5&quot;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-6&quot;&gt;&lt;a href=&quot;#cb1-6&quot;&gt;&lt;/a&gt;&lt;span class=&quot;kw&quot;&gt;[title]&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-7&quot;&gt;&lt;a href=&quot;#cb1-7&quot;&gt;&lt;/a&gt;&lt;span class=&quot;dt&quot;&gt;type &lt;/span&gt;&lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt; text&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-8&quot;&gt;&lt;a href=&quot;#cb1-8&quot;&gt;&lt;/a&gt;&lt;span class=&quot;dt&quot;&gt;options.label &lt;/span&gt;&lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt; Title&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-9&quot;&gt;&lt;a href=&quot;#cb1-9&quot;&gt;&lt;/a&gt;&lt;span class=&quot;dt&quot;&gt;options.required &lt;/span&gt;&lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;true&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-10&quot;&gt;&lt;a href=&quot;#cb1-10&quot;&gt;&lt;/a&gt;&lt;span class=&quot;dt&quot;&gt;display.tagName &lt;/span&gt;&lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt; h1&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-11&quot;&gt;&lt;a href=&quot;#cb1-11&quot;&gt;&lt;/a&gt;&lt;span class=&quot;dt&quot;&gt;display.filters.0 &lt;/span&gt;&lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt; HtmlSpecialChars&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-12&quot;&gt;&lt;a href=&quot;#cb1-12&quot;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-13&quot;&gt;&lt;a href=&quot;#cb1-13&quot;&gt;&lt;/a&gt;&lt;span class=&quot;kw&quot;&gt;[content]&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-14&quot;&gt;&lt;a href=&quot;#cb1-14&quot;&gt;&lt;/a&gt;&lt;span class=&quot;dt&quot;&gt;type &lt;/span&gt;&lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt; textarea&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-15&quot;&gt;&lt;a href=&quot;#cb1-15&quot;&gt;&lt;/a&gt;&lt;span class=&quot;dt&quot;&gt;options.label &lt;/span&gt;&lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt; &amp;quot;Content&amp;quot;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-16&quot;&gt;&lt;a href=&quot;#cb1-16&quot;&gt;&lt;/a&gt;&lt;span class=&quot;dt&quot;&gt;options.required &lt;/span&gt;&lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;true&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-17&quot;&gt;&lt;a href=&quot;#cb1-17&quot;&gt;&lt;/a&gt;&lt;span class=&quot;dt&quot;&gt;display.tagName &lt;/span&gt;&lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt; pre&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-18&quot;&gt;&lt;a href=&quot;#cb1-18&quot;&gt;&lt;/a&gt;&lt;span class=&quot;dt&quot;&gt;display.filters.0 &lt;/span&gt;&lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt; HtmlSpecialChars&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Click “Save”.&lt;/p&gt;
&lt;h2 id=&quot;the-config-app&quot;&gt;The Config App&lt;/h2&gt;
&lt;p&gt;I’ve borrowed heavily from Paul’s &lt;a href=&quot;https://github.com/paul-hammant/app-config-app/blob/master/index.html&quot;&gt;app-config HTML page&lt;/a&gt;, which uses &lt;a href=&quot;http://angularjs.org/&quot;&gt;AngularJS&lt;/a&gt; to manage the UI and interaction with the server. Where Paul’s app-config app used the &lt;a href=&quot;http://kmkeen.com/jshon/&quot;&gt;jshon&lt;/a&gt; command to encode and decode JSON, Zend Framework has a utility class for encoding, decoding, and pretty-printing JSON, and Chronicle also ships with the &lt;a href=&quot;https://github.com/paulgb/simplediff/&quot;&gt;simplediff&lt;/a&gt; utility for performing diffs with PHP.&lt;/p&gt;
&lt;p&gt;The source JSON configuration is the same, albeit sorted:&lt;/p&gt;
&lt;div class=&quot;sourceCode&quot; id=&quot;cb2&quot;&gt;&lt;pre class=&quot;sourceCode numberSource json numberLines&quot;&gt;&lt;code class=&quot;sourceCode json&quot;&gt;&lt;span id=&quot;cb2-1&quot;&gt;&lt;a href=&quot;#cb2-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;fu&quot;&gt;{&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb2-2&quot;&gt;&lt;a href=&quot;#cb2-2&quot;&gt;&lt;/a&gt;  &lt;span class=&quot;dt&quot;&gt;&amp;quot;bannedNicks&amp;quot;&lt;/span&gt;&lt;span class=&quot;fu&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;ot&quot;&gt;[&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb2-3&quot;&gt;&lt;a href=&quot;#cb2-3&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;st&quot;&gt;&amp;quot;derek&amp;quot;&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt;,&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb2-4&quot;&gt;&lt;a href=&quot;#cb2-4&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;st&quot;&gt;&amp;quot;dino&amp;quot;&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt;,&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb2-5&quot;&gt;&lt;a href=&quot;#cb2-5&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;st&quot;&gt;&amp;quot;ffff&amp;quot;&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt;,&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb2-6&quot;&gt;&lt;a href=&quot;#cb2-6&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;st&quot;&gt;&amp;quot;jjjj&amp;quot;&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt;,&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb2-7&quot;&gt;&lt;a href=&quot;#cb2-7&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;st&quot;&gt;&amp;quot;werwer&amp;quot;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb2-8&quot;&gt;&lt;a href=&quot;#cb2-8&quot;&gt;&lt;/a&gt;  &lt;span class=&quot;ot&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;fu&quot;&gt;,&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb2-9&quot;&gt;&lt;a href=&quot;#cb2-9&quot;&gt;&lt;/a&gt;  &lt;span class=&quot;dt&quot;&gt;&amp;quot;defaultErrorReciever&amp;quot;&lt;/span&gt;&lt;span class=&quot;fu&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;piglet@thoughtworks.com&amp;quot;&lt;/span&gt;&lt;span class=&quot;fu&quot;&gt;,&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb2-10&quot;&gt;&lt;a href=&quot;#cb2-10&quot;&gt;&lt;/a&gt;  &lt;span class=&quot;dt&quot;&gt;&amp;quot;lighton&amp;quot;&lt;/span&gt;&lt;span class=&quot;fu&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;fu&quot;&gt;,&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb2-11&quot;&gt;&lt;a href=&quot;#cb2-11&quot;&gt;&lt;/a&gt;  &lt;span class=&quot;dt&quot;&gt;&amp;quot;loadMaxPercent&amp;quot;&lt;/span&gt;&lt;span class=&quot;fu&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;88&amp;quot;&lt;/span&gt;&lt;span class=&quot;fu&quot;&gt;,&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb2-12&quot;&gt;&lt;a href=&quot;#cb2-12&quot;&gt;&lt;/a&gt;  &lt;span class=&quot;dt&quot;&gt;&amp;quot;nextShutdownDate&amp;quot;&lt;/span&gt;&lt;span class=&quot;fu&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;8&lt;/span&gt;&lt;span class=&quot;ch&quot;&gt;\/&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;9&lt;/span&gt;&lt;span class=&quot;ch&quot;&gt;\/&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;2012&amp;quot;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb2-13&quot;&gt;&lt;a href=&quot;#cb2-13&quot;&gt;&lt;/a&gt;&lt;span class=&quot;fu&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The &lt;code&gt;index.html&lt;/code&gt; page has been modified from the original to support only the basic &lt;em&gt;commit&lt;/em&gt; and &lt;em&gt;diffs&lt;/em&gt; functionality:&lt;/p&gt;
&lt;div class=&quot;sourceCode&quot; id=&quot;cb3&quot;&gt;&lt;pre class=&quot;sourceCode numberSource html numberLines&quot;&gt;&lt;code class=&quot;sourceCode html&quot;&gt;&lt;span id=&quot;cb3-1&quot;&gt;&lt;a href=&quot;#cb3-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;dt&quot;&gt;&amp;lt;!DOCTYPE &lt;/span&gt;html PUBLIC &amp;quot;-//W3C//DTD XHTML 1.0 Strict//EN&amp;quot;&lt;/span&gt;
&lt;span id=&quot;cb3-2&quot;&gt;&lt;a href=&quot;#cb3-2&quot;&gt;&lt;/a&gt;        &amp;quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd&amp;quot;&lt;span class=&quot;dt&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb3-3&quot;&gt;&lt;a href=&quot;#cb3-3&quot;&gt;&lt;/a&gt;&lt;span class=&quot;kw&quot;&gt;&amp;lt;html&lt;/span&gt; &lt;span class=&quot;er&quot;&gt;lang&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&amp;quot;en&amp;quot;&lt;/span&gt; &lt;span class=&quot;er&quot;&gt;xmlns:ng&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&amp;quot;http://angularjs.org&amp;quot;&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb3-4&quot;&gt;&lt;a href=&quot;#cb3-4&quot;&gt;&lt;/a&gt;&lt;span class=&quot;kw&quot;&gt;&amp;lt;head&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb3-5&quot;&gt;&lt;a href=&quot;#cb3-5&quot;&gt;&lt;/a&gt;&lt;span class=&quot;kw&quot;&gt;&amp;lt;meta&lt;/span&gt; &lt;span class=&quot;er&quot;&gt;http-equiv&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&amp;quot;content-type&amp;quot;&lt;/span&gt; &lt;span class=&quot;er&quot;&gt;content&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&amp;quot;text/html; charset=UTF-8&amp;quot;&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb3-6&quot;&gt;&lt;a href=&quot;#cb3-6&quot;&gt;&lt;/a&gt;  &lt;span class=&quot;kw&quot;&gt;&amp;lt;title&amp;gt;&lt;/span&gt;Configuration application (alpha)&lt;span class=&quot;kw&quot;&gt;&amp;lt;/title&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb3-7&quot;&gt;&lt;a href=&quot;#cb3-7&quot;&gt;&lt;/a&gt;  &lt;span class=&quot;kw&quot;&gt;&amp;lt;script&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt; type=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&amp;quot;text/javascript&amp;quot;&lt;/span&gt; &lt;span class=&quot;er&quot;&gt;ng:autobind&lt;/span&gt; &lt;span class=&quot;er&quot;&gt;src&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&amp;quot;http://code.angularjs.org/0.9.19/angular-0.9.19.min.js&amp;quot;&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb3-8&quot;&gt;&lt;a href=&quot;#cb3-8&quot;&gt;&lt;/a&gt;  &lt;span class=&quot;kw&quot;&gt;&amp;lt;style&lt;/span&gt; &lt;span class=&quot;er&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&amp;quot;text/css&amp;quot;&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb3-9&quot;&gt;&lt;a href=&quot;#cb3-9&quot;&gt;&lt;/a&gt;    ins { &lt;span class=&quot;kw&quot;&gt;color&lt;/span&gt;: &lt;span class=&quot;cn&quot;&gt;#00CC00&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;text-decoration&lt;/span&gt;: &lt;span class=&quot;dv&quot;&gt;none&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt; }&lt;/span&gt;
&lt;span id=&quot;cb3-10&quot;&gt;&lt;a href=&quot;#cb3-10&quot;&gt;&lt;/a&gt;    del { &lt;span class=&quot;kw&quot;&gt;color&lt;/span&gt;: &lt;span class=&quot;cn&quot;&gt;#CC0000&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;text-decoration&lt;/span&gt;: &lt;span class=&quot;dv&quot;&gt;none&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt; }&lt;/span&gt;
&lt;span id=&quot;cb3-11&quot;&gt;&lt;a href=&quot;#cb3-11&quot;&gt;&lt;/a&gt;  &lt;span class=&quot;kw&quot;&gt;&amp;lt;/style&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb3-12&quot;&gt;&lt;a href=&quot;#cb3-12&quot;&gt;&lt;/a&gt;&lt;span class=&quot;kw&quot;&gt;&amp;lt;/head&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb3-13&quot;&gt;&lt;a href=&quot;#cb3-13&quot;&gt;&lt;/a&gt;&lt;span class=&quot;kw&quot;&gt;&amp;lt;body&lt;/span&gt; &lt;span class=&quot;er&quot;&gt;ng:controller&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&amp;quot;AppCfg&amp;quot;&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb3-14&quot;&gt;&lt;a href=&quot;#cb3-14&quot;&gt;&lt;/a&gt;&lt;span class=&quot;kw&quot;&gt;&amp;lt;script&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt; type=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&amp;quot;text/javascript&amp;quot;&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb3-15&quot;&gt;&lt;a href=&quot;#cb3-15&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;kw&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;AppCfg&lt;/span&gt;($resource&lt;span class=&quot;op&quot;&gt;,&lt;/span&gt; $xhr) {&lt;/span&gt;
&lt;span id=&quot;cb3-16&quot;&gt;&lt;a href=&quot;#cb3-16&quot;&gt;&lt;/a&gt;        &lt;span class=&quot;kw&quot;&gt;var&lt;/span&gt; self &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb3-17&quot;&gt;&lt;a href=&quot;#cb3-17&quot;&gt;&lt;/a&gt;        &lt;span class=&quot;kw&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;at&quot;&gt;newNickname&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb3-18&quot;&gt;&lt;a href=&quot;#cb3-18&quot;&gt;&lt;/a&gt;        &lt;span class=&quot;kw&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;at&quot;&gt;svrMessage&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb3-19&quot;&gt;&lt;a href=&quot;#cb3-19&quot;&gt;&lt;/a&gt;        &lt;span class=&quot;kw&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;at&quot;&gt;message&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb3-20&quot;&gt;&lt;a href=&quot;#cb3-20&quot;&gt;&lt;/a&gt;        &lt;span class=&quot;kw&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;at&quot;&gt;cfg&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;$resource&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&amp;quot;/appconfig/stack_configuration.json&amp;quot;&lt;/span&gt;)&lt;span class=&quot;op&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;fu&quot;&gt;get&lt;/span&gt;({})&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb3-21&quot;&gt;&lt;a href=&quot;#cb3-21&quot;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&quot;cb3-22&quot;&gt;&lt;a href=&quot;#cb3-22&quot;&gt;&lt;/a&gt;        &lt;span class=&quot;kw&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;at&quot;&gt;save&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;function&lt;/span&gt;() {&lt;/span&gt;
&lt;span id=&quot;cb3-23&quot;&gt;&lt;a href=&quot;#cb3-23&quot;&gt;&lt;/a&gt;            self&lt;span class=&quot;op&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;at&quot;&gt;cfg&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;fu&quot;&gt;$save&lt;/span&gt;({&lt;span class=&quot;dt&quot;&gt;message&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;:&lt;/span&gt; self&lt;span class=&quot;op&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;at&quot;&gt;message&lt;/span&gt;}&lt;span class=&quot;op&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;function&lt;/span&gt;() {&lt;/span&gt;
&lt;span id=&quot;cb3-24&quot;&gt;&lt;a href=&quot;#cb3-24&quot;&gt;&lt;/a&gt;                &lt;span class=&quot;fu&quot;&gt;alert&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&amp;quot;Config saved to server&amp;quot;&lt;/span&gt;)&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb3-25&quot;&gt;&lt;a href=&quot;#cb3-25&quot;&gt;&lt;/a&gt;            }&lt;span class=&quot;op&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;function&lt;/span&gt;() {&lt;/span&gt;
&lt;span id=&quot;cb3-26&quot;&gt;&lt;a href=&quot;#cb3-26&quot;&gt;&lt;/a&gt;                &lt;span class=&quot;fu&quot;&gt;alert&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&amp;quot;ERROR on save&amp;quot;&lt;/span&gt;)&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb3-27&quot;&gt;&lt;a href=&quot;#cb3-27&quot;&gt;&lt;/a&gt;            })&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb3-28&quot;&gt;&lt;a href=&quot;#cb3-28&quot;&gt;&lt;/a&gt;            self&lt;span class=&quot;op&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;at&quot;&gt;message&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb3-29&quot;&gt;&lt;a href=&quot;#cb3-29&quot;&gt;&lt;/a&gt;        }&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb3-30&quot;&gt;&lt;a href=&quot;#cb3-30&quot;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&quot;cb3-31&quot;&gt;&lt;a href=&quot;#cb3-31&quot;&gt;&lt;/a&gt;        &lt;span class=&quot;kw&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;at&quot;&gt;newNick&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;function&lt;/span&gt;() {&lt;/span&gt;
&lt;span id=&quot;cb3-32&quot;&gt;&lt;a href=&quot;#cb3-32&quot;&gt;&lt;/a&gt;            self&lt;span class=&quot;op&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;at&quot;&gt;cfg&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;at&quot;&gt;bannedNicks&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;fu&quot;&gt;push&lt;/span&gt;(self&lt;span class=&quot;op&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;at&quot;&gt;newNickname&lt;/span&gt;)&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb3-33&quot;&gt;&lt;a href=&quot;#cb3-33&quot;&gt;&lt;/a&gt;            self&lt;span class=&quot;op&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;at&quot;&gt;newNickname&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb3-34&quot;&gt;&lt;a href=&quot;#cb3-34&quot;&gt;&lt;/a&gt;        }&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb3-35&quot;&gt;&lt;a href=&quot;#cb3-35&quot;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&quot;cb3-36&quot;&gt;&lt;a href=&quot;#cb3-36&quot;&gt;&lt;/a&gt;        &lt;span class=&quot;kw&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;at&quot;&gt;diffs&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;function&lt;/span&gt;() {&lt;/span&gt;
&lt;span id=&quot;cb3-37&quot;&gt;&lt;a href=&quot;#cb3-37&quot;&gt;&lt;/a&gt;            &lt;span class=&quot;fu&quot;&gt;$xhr&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&amp;quot;post&amp;quot;&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;/appconfig/diffs/stack_configuration.json&amp;quot;&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;,&lt;/span&gt; angular&lt;span class=&quot;op&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;fu&quot;&gt;toJson&lt;/span&gt;(self&lt;span class=&quot;op&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;at&quot;&gt;cfg&lt;/span&gt;)&lt;span class=&quot;op&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;function&lt;/span&gt;(code&lt;span class=&quot;op&quot;&gt;,&lt;/span&gt; svrMessage) {&lt;/span&gt;
&lt;span id=&quot;cb3-38&quot;&gt;&lt;a href=&quot;#cb3-38&quot;&gt;&lt;/a&gt;                self&lt;span class=&quot;op&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;at&quot;&gt;svrMessage&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; svrMessage&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb3-39&quot;&gt;&lt;a href=&quot;#cb3-39&quot;&gt;&lt;/a&gt;            })&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb3-40&quot;&gt;&lt;a href=&quot;#cb3-40&quot;&gt;&lt;/a&gt;        }&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb3-41&quot;&gt;&lt;a href=&quot;#cb3-41&quot;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&quot;cb3-42&quot;&gt;&lt;a href=&quot;#cb3-42&quot;&gt;&lt;/a&gt;        &lt;span class=&quot;kw&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;at&quot;&gt;deleteNick&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;function&lt;/span&gt;(nick) {&lt;/span&gt;
&lt;span id=&quot;cb3-43&quot;&gt;&lt;a href=&quot;#cb3-43&quot;&gt;&lt;/a&gt;            &lt;span class=&quot;kw&quot;&gt;var&lt;/span&gt; oldBannedNicks &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; self&lt;span class=&quot;op&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;at&quot;&gt;cfg&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;at&quot;&gt;bannedNicks&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb3-44&quot;&gt;&lt;a href=&quot;#cb3-44&quot;&gt;&lt;/a&gt;            self&lt;span class=&quot;op&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;at&quot;&gt;cfg&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;at&quot;&gt;bannedNicks&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; []&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb3-45&quot;&gt;&lt;a href=&quot;#cb3-45&quot;&gt;&lt;/a&gt;            angular&lt;span class=&quot;op&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;fu&quot;&gt;forEach&lt;/span&gt;(oldBannedNicks&lt;span class=&quot;op&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;function&lt;/span&gt;(n) {&lt;/span&gt;
&lt;span id=&quot;cb3-46&quot;&gt;&lt;a href=&quot;#cb3-46&quot;&gt;&lt;/a&gt;                &lt;span class=&quot;cf&quot;&gt;if&lt;/span&gt; (nick &lt;span class=&quot;op&quot;&gt;!=&lt;/span&gt; n) {&lt;/span&gt;
&lt;span id=&quot;cb3-47&quot;&gt;&lt;a href=&quot;#cb3-47&quot;&gt;&lt;/a&gt;                    self&lt;span class=&quot;op&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;at&quot;&gt;cfg&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;at&quot;&gt;bannedNicks&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;fu&quot;&gt;push&lt;/span&gt;(n)&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb3-48&quot;&gt;&lt;a href=&quot;#cb3-48&quot;&gt;&lt;/a&gt;                }&lt;/span&gt;
&lt;span id=&quot;cb3-49&quot;&gt;&lt;a href=&quot;#cb3-49&quot;&gt;&lt;/a&gt;            })&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb3-50&quot;&gt;&lt;a href=&quot;#cb3-50&quot;&gt;&lt;/a&gt;        }&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb3-51&quot;&gt;&lt;a href=&quot;#cb3-51&quot;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&quot;cb3-52&quot;&gt;&lt;a href=&quot;#cb3-52&quot;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&quot;cb3-53&quot;&gt;&lt;a href=&quot;#cb3-53&quot;&gt;&lt;/a&gt;    AppCfg&lt;span class=&quot;op&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;at&quot;&gt;$inject&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; [&lt;span class=&quot;st&quot;&gt;&amp;quot;$resource&amp;quot;&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;$xhr&amp;quot;&lt;/span&gt;]&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb3-54&quot;&gt;&lt;a href=&quot;#cb3-54&quot;&gt;&lt;/a&gt;&lt;span class=&quot;kw&quot;&gt;&amp;lt;/script&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb3-55&quot;&gt;&lt;a href=&quot;#cb3-55&quot;&gt;&lt;/a&gt;  Light is on:  &lt;span class=&quot;kw&quot;&gt;&amp;lt;input&lt;/span&gt; &lt;span class=&quot;er&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&amp;quot;checkbox&amp;quot;&lt;/span&gt; &lt;span class=&quot;er&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&amp;quot;cfg.lighton&amp;quot;&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;/&amp;gt;&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;&amp;lt;br/&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb3-56&quot;&gt;&lt;a href=&quot;#cb3-56&quot;&gt;&lt;/a&gt;  Default Error Reciever (email): &lt;span class=&quot;kw&quot;&gt;&amp;lt;input&lt;/span&gt; &lt;span class=&quot;er&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&amp;quot;cfg.defaultErrorReciever&amp;quot;&lt;/span&gt; &lt;span class=&quot;er&quot;&gt;ng:validate&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&amp;quot;email&amp;quot;&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;/&amp;gt;&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;&amp;lt;br/&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb3-57&quot;&gt;&lt;a href=&quot;#cb3-57&quot;&gt;&lt;/a&gt;  Max Load Percentage: &lt;span class=&quot;kw&quot;&gt;&amp;lt;input&lt;/span&gt; &lt;span class=&quot;er&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&amp;quot;cfg.loadMaxPercent&amp;quot;&lt;/span&gt; &lt;span class=&quot;er&quot;&gt;ng:validate&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&amp;quot;number:0:100&amp;quot;&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;/&amp;gt;&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;&amp;lt;br/&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb3-58&quot;&gt;&lt;a href=&quot;#cb3-58&quot;&gt;&lt;/a&gt;  Next Shutdown Date: &lt;span class=&quot;kw&quot;&gt;&amp;lt;input&lt;/span&gt; &lt;span class=&quot;er&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&amp;quot;cfg.nextShutdownDate&amp;quot;&lt;/span&gt; &lt;span class=&quot;er&quot;&gt;ng:validate&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&amp;quot;date&amp;quot;&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;/&amp;gt;&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;&amp;lt;br/&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb3-59&quot;&gt;&lt;a href=&quot;#cb3-59&quot;&gt;&lt;/a&gt;  Banned nicks:&lt;/span&gt;
&lt;span id=&quot;cb3-60&quot;&gt;&lt;a href=&quot;#cb3-60&quot;&gt;&lt;/a&gt;      &lt;span class=&quot;kw&quot;&gt;&amp;lt;ol&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb3-61&quot;&gt;&lt;a href=&quot;#cb3-61&quot;&gt;&lt;/a&gt;        &lt;span class=&quot;kw&quot;&gt;&amp;lt;li&lt;/span&gt; &lt;span class=&quot;er&quot;&gt;ng:repeat&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&amp;quot;nick in cfg.bannedNicks&amp;quot;&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;&amp;gt;&amp;lt;span&amp;gt;&lt;/span&gt;{{nick}} &lt;span class=&quot;dv&quot;&gt;&amp;amp;nbsp;&amp;amp;nbsp;&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;&amp;lt;a&lt;/span&gt; &lt;span class=&quot;er&quot;&gt;ng:click&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&amp;quot;deleteNick(nick)&amp;quot;&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;&amp;gt;&lt;/span&gt;[X]&lt;span class=&quot;kw&quot;&gt;&amp;lt;/a&amp;gt;&amp;lt;/span&amp;gt;&amp;lt;/li&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb3-62&quot;&gt;&lt;a href=&quot;#cb3-62&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;kw&quot;&gt;&amp;lt;/ol&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb3-63&quot;&gt;&lt;a href=&quot;#cb3-63&quot;&gt;&lt;/a&gt;  &lt;span class=&quot;kw&quot;&gt;&amp;lt;form&lt;/span&gt; &lt;span class=&quot;er&quot;&gt;ng:submit&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&amp;quot;newNick()&amp;quot;&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb3-64&quot;&gt;&lt;a href=&quot;#cb3-64&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;kw&quot;&gt;&amp;lt;input&lt;/span&gt; &lt;span class=&quot;er&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&amp;quot;text&amp;quot;&lt;/span&gt; &lt;span class=&quot;er&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&amp;quot;newNickname&amp;quot;&lt;/span&gt; &lt;span class=&quot;er&quot;&gt;size&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&amp;quot;20&amp;quot;&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;/&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb3-65&quot;&gt;&lt;a href=&quot;#cb3-65&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;kw&quot;&gt;&amp;lt;input&lt;/span&gt; &lt;span class=&quot;er&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&amp;quot;submit&amp;quot;&lt;/span&gt; &lt;span class=&quot;er&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;dv&quot;&gt;&amp;amp;lt;&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;-- Add Nick&amp;quot;&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;/&amp;gt;&amp;lt;br/&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb3-66&quot;&gt;&lt;a href=&quot;#cb3-66&quot;&gt;&lt;/a&gt;  &lt;span class=&quot;kw&quot;&gt;&amp;lt;/form&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb3-67&quot;&gt;&lt;a href=&quot;#cb3-67&quot;&gt;&lt;/a&gt;  &lt;span class=&quot;kw&quot;&gt;&amp;lt;hr/&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb3-68&quot;&gt;&lt;a href=&quot;#cb3-68&quot;&gt;&lt;/a&gt;  &lt;span class=&quot;kw&quot;&gt;&amp;lt;button&lt;/span&gt; &lt;span class=&quot;er&quot;&gt;ng:click&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&amp;quot;diffs()&amp;quot;&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;&amp;gt;&lt;/span&gt;View Diffs&lt;span class=&quot;kw&quot;&gt;&amp;lt;/button&amp;gt;&amp;lt;br/&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb3-69&quot;&gt;&lt;a href=&quot;#cb3-69&quot;&gt;&lt;/a&gt;  &lt;span class=&quot;kw&quot;&gt;&amp;lt;button&lt;/span&gt; &lt;span class=&quot;er&quot;&gt;ng:disabled&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&amp;quot;{{!message}}&amp;quot;&lt;/span&gt; &lt;span class=&quot;er&quot;&gt;ng:click&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&amp;quot;save()&amp;quot;&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;&amp;gt;&lt;/span&gt;Commit Changes&lt;span class=&quot;kw&quot;&gt;&amp;lt;/button&amp;gt;&lt;/span&gt; Commit Message: &lt;span class=&quot;kw&quot;&gt;&amp;lt;input&lt;/span&gt; &lt;span class=&quot;er&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&amp;quot;message&amp;quot;&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;&amp;gt;&amp;lt;/button&amp;gt;&amp;lt;br/&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb3-70&quot;&gt;&lt;a href=&quot;#cb3-70&quot;&gt;&lt;/a&gt;  Last Server operation: &lt;span class=&quot;kw&quot;&gt;&amp;lt;br/&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb3-71&quot;&gt;&lt;a href=&quot;#cb3-71&quot;&gt;&lt;/a&gt;  &lt;span class=&quot;kw&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;er&quot;&gt;ng:bind&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&amp;quot;svrMessage | html:&amp;#39;unsafe&amp;#39;&amp;quot;&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb3-72&quot;&gt;&lt;a href=&quot;#cb3-72&quot;&gt;&lt;/a&gt;  &lt;span class=&quot;kw&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb3-73&quot;&gt;&lt;a href=&quot;#cb3-73&quot;&gt;&lt;/a&gt;&lt;span class=&quot;kw&quot;&gt;&amp;lt;/body&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb3-74&quot;&gt;&lt;a href=&quot;#cb3-74&quot;&gt;&lt;/a&gt;&lt;span class=&quot;kw&quot;&gt;&amp;lt;/html&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Both of these assets were added by performing:&lt;/p&gt;
&lt;ol type=&quot;1&quot;&gt;
&lt;li&gt;Click “Add” from the top navbar&lt;/li&gt;
&lt;li&gt;Click “Add Content”&lt;/li&gt;
&lt;li&gt;Select “Assets” &amp;gt; “Plain Text”&lt;/li&gt;
&lt;li&gt;For “Title”, enter “&lt;code&gt;index.html&lt;/code&gt;” or “&lt;code&gt;stack_configuration.json&lt;/code&gt;”&lt;/li&gt;
&lt;li&gt;Paste in the appropriate “Content”&lt;/li&gt;
&lt;li&gt;Click “URL”, select “Custom”, and enter the same value as “Title” (otherwise, Chronicle will convert underscores to dashes, so be careful!)&lt;/li&gt;
&lt;li&gt;Click “Save”, enter a commit message, then click the next “Save”&lt;/li&gt;
&lt;li&gt;Both assets should be viewable as mangled Chronicle content entries from &lt;code&gt;http://localhost/index.html&lt;/code&gt; and &lt;code&gt;http://localhost/stack_configuration.json&lt;/code&gt;. &lt;em&gt;You normally will not use these URLs&lt;/em&gt;.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;At this point, neither asset is actually usable. Most content is heavily decorated with additional HTML and then displayed within a layout template, but I want both the &lt;code&gt;index.html&lt;/code&gt; and &lt;code&gt;stack_configuration.json&lt;/code&gt; assets to be viewable as standalone files and provide a REST interface for AngularJS to work against.&lt;/p&gt;
&lt;h2 id=&quot;come-back-php-all-is-forgiven&quot;&gt;Come back PHP! All is forgiven&lt;/h2&gt;
&lt;p&gt;Chronicle is largely built using &lt;a href=&quot;http://framework.zend.com/&quot;&gt;Zend Framework&lt;/a&gt; and makes adding extra modules to the system pretty easy. My module needs to be able to display plaintext assets, update their content using an &lt;code&gt;HTTP POST&lt;/code&gt;, and provide diffs between the last commit and the current content.&lt;/p&gt;
&lt;p&gt;To create the module, the following paths need to be added:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;INSTALL/application/appconfig&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;INSTALL/application/appconfig/controllers&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;INSTALL/application/appconfig/views/scripts/index&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Declare the module with &lt;code&gt;INSTALL/application/appconfig/module.ini&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&quot;sourceCode&quot; id=&quot;cb4&quot;&gt;&lt;pre class=&quot;sourceCode numberSource ini numberLines&quot;&gt;&lt;code class=&quot;sourceCode ini&quot;&gt;&lt;span id=&quot;cb4-1&quot;&gt;&lt;a href=&quot;#cb4-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;dt&quot;&gt;version &lt;/span&gt;&lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;fl&quot;&gt;1.0&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb4-2&quot;&gt;&lt;a href=&quot;#cb4-2&quot;&gt;&lt;/a&gt;&lt;span class=&quot;dt&quot;&gt;description &lt;/span&gt;&lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt; Application config proof of concept&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb4-3&quot;&gt;&lt;a href=&quot;#cb4-3&quot;&gt;&lt;/a&gt;&lt;span class=&quot;dt&quot;&gt;icon &lt;/span&gt;&lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt; images/icon.png&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb4-4&quot;&gt;&lt;a href=&quot;#cb4-4&quot;&gt;&lt;/a&gt;&lt;span class=&quot;dt&quot;&gt;tags &lt;/span&gt;&lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt; config&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb4-5&quot;&gt;&lt;a href=&quot;#cb4-5&quot;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&quot;cb4-6&quot;&gt;&lt;a href=&quot;#cb4-6&quot;&gt;&lt;/a&gt;&lt;span class=&quot;kw&quot;&gt;[maintainer]&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb4-7&quot;&gt;&lt;a href=&quot;#cb4-7&quot;&gt;&lt;/a&gt;&lt;span class=&quot;dt&quot;&gt;name &lt;/span&gt;&lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt; Perforce Software&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb4-8&quot;&gt;&lt;a href=&quot;#cb4-8&quot;&gt;&lt;/a&gt;&lt;span class=&quot;dt&quot;&gt;email &lt;/span&gt;&lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt; support@perforce.com&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb4-9&quot;&gt;&lt;a href=&quot;#cb4-9&quot;&gt;&lt;/a&gt;&lt;span class=&quot;dt&quot;&gt;url &lt;/span&gt;&lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt; http://www.perforce.com&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb4-10&quot;&gt;&lt;a href=&quot;#cb4-10&quot;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&quot;cb4-11&quot;&gt;&lt;a href=&quot;#cb4-11&quot;&gt;&lt;/a&gt;&lt;span class=&quot;kw&quot;&gt;[routes]&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb4-12&quot;&gt;&lt;a href=&quot;#cb4-12&quot;&gt;&lt;/a&gt;&lt;span class=&quot;dt&quot;&gt;appconfig.type &lt;/span&gt;&lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt; Zend_Controller_Router_Route_Regex&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb4-13&quot;&gt;&lt;a href=&quot;#cb4-13&quot;&gt;&lt;/a&gt;&lt;span class=&quot;dt&quot;&gt;appconfig.route &lt;/span&gt;&lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt; &amp;#39;appconfig/(.+)&amp;#39;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb4-14&quot;&gt;&lt;a href=&quot;#cb4-14&quot;&gt;&lt;/a&gt;&lt;span class=&quot;dt&quot;&gt;appconfig.reverse &lt;/span&gt;&lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt; appconfig/%s&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb4-15&quot;&gt;&lt;a href=&quot;#cb4-15&quot;&gt;&lt;/a&gt;&lt;span class=&quot;dt&quot;&gt;appconfig.defaults.module &lt;/span&gt;&lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt; appconfig&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb4-16&quot;&gt;&lt;a href=&quot;#cb4-16&quot;&gt;&lt;/a&gt;&lt;span class=&quot;dt&quot;&gt;appconfig.defaults.controller &lt;/span&gt;&lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt; index&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb4-17&quot;&gt;&lt;a href=&quot;#cb4-17&quot;&gt;&lt;/a&gt;&lt;span class=&quot;dt&quot;&gt;appconfig.defaults.action &lt;/span&gt;&lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt; index&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb4-18&quot;&gt;&lt;a href=&quot;#cb4-18&quot;&gt;&lt;/a&gt;&lt;span class=&quot;dt&quot;&gt;appconfig.map.resource &lt;/span&gt;&lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb4-19&quot;&gt;&lt;a href=&quot;#cb4-19&quot;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&quot;cb4-20&quot;&gt;&lt;a href=&quot;#cb4-20&quot;&gt;&lt;/a&gt;&lt;span class=&quot;dt&quot;&gt;appconfig-operation.type &lt;/span&gt;&lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt; Zend_Controller_Router_Route_Regex&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb4-21&quot;&gt;&lt;a href=&quot;#cb4-21&quot;&gt;&lt;/a&gt;&lt;span class=&quot;dt&quot;&gt;appconfig-operation.route &lt;/span&gt;&lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt; &amp;#39;appconfig/([^/]+)/(.+)&amp;#39;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb4-22&quot;&gt;&lt;a href=&quot;#cb4-22&quot;&gt;&lt;/a&gt;&lt;span class=&quot;dt&quot;&gt;appconfig-operation.reverse &lt;/span&gt;&lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt; appconfig/%s/%s&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb4-23&quot;&gt;&lt;a href=&quot;#cb4-23&quot;&gt;&lt;/a&gt;&lt;span class=&quot;dt&quot;&gt;appconfig-operation.defaults.module &lt;/span&gt;&lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt; appconfig&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb4-24&quot;&gt;&lt;a href=&quot;#cb4-24&quot;&gt;&lt;/a&gt;&lt;span class=&quot;dt&quot;&gt;appconfig-operation.defaults.controller &lt;/span&gt;&lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt; index&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb4-25&quot;&gt;&lt;a href=&quot;#cb4-25&quot;&gt;&lt;/a&gt;&lt;span class=&quot;dt&quot;&gt;appconfig-operation.defaults.action &lt;/span&gt;&lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt; index&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb4-26&quot;&gt;&lt;a href=&quot;#cb4-26&quot;&gt;&lt;/a&gt;&lt;span class=&quot;dt&quot;&gt;appconfig-operation.map.action &lt;/span&gt;&lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb4-27&quot;&gt;&lt;a href=&quot;#cb4-27&quot;&gt;&lt;/a&gt;&lt;span class=&quot;dt&quot;&gt;appconfig-operation.map.resource &lt;/span&gt;&lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;dv&quot;&gt;2&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Add a view script for displaying plaintext assets, &lt;code&gt;INSTALL/application/appconfig/views/scripts/index/index.phtml&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&quot;sourceCode&quot; id=&quot;cb5&quot;&gt;&lt;pre class=&quot;sourceCode numberSource php numberLines&quot;&gt;&lt;code class=&quot;sourceCode php&quot;&gt;&lt;span id=&quot;cb5-1&quot;&gt;&lt;a href=&quot;#cb5-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;kw&quot;&gt;&amp;lt;?&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;va&quot;&gt;$this&lt;/span&gt;-&amp;gt;entry-&amp;gt;getValue(&lt;span class=&quot;st&quot;&gt;&amp;#39;content&amp;#39;&lt;/span&gt;) &lt;span class=&quot;kw&quot;&gt;?&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Add a view script for displaying diffs, &lt;code&gt;INSTALL/application/appconfig/views/scripts/index/diffs.phtml&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&quot;sourceCode&quot; id=&quot;cb6&quot;&gt;&lt;pre class=&quot;sourceCode numberSource php numberLines&quot;&gt;&lt;code class=&quot;sourceCode php&quot;&gt;&lt;span id=&quot;cb6-1&quot;&gt;&lt;a href=&quot;#cb6-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;op&quot;&gt;&amp;lt;&lt;/span&gt;pre&lt;span class=&quot;op&quot;&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt;?&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;va&quot;&gt;$this&lt;/span&gt;-&amp;gt;diffs &lt;span class=&quot;kw&quot;&gt;?&amp;gt;&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;&amp;lt;/&lt;/span&gt;pre&lt;span class=&quot;op&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;And a controller at &lt;code&gt;INSTALL/application/appconfig/controllers/IndexController.phtml&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&quot;sourceCode&quot; id=&quot;cb7&quot;&gt;&lt;pre class=&quot;sourceCode numberSource php numberLines&quot;&gt;&lt;code class=&quot;sourceCode php&quot;&gt;&lt;span id=&quot;cb7-1&quot;&gt;&lt;a href=&quot;#cb7-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;kw&quot;&gt;&amp;lt;?php&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb7-2&quot;&gt;&lt;a href=&quot;#cb7-2&quot;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&quot;cb7-3&quot;&gt;&lt;a href=&quot;#cb7-3&quot;&gt;&lt;/a&gt;&lt;span class=&quot;fu&quot;&gt;defined&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&amp;#39;LIBRARY_PATH&amp;#39;&lt;/span&gt;) &lt;span class=&quot;op&quot;&gt;or&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;define&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&amp;#39;LIBRARY_PATH&amp;#39;&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;dirname&lt;/span&gt;(&lt;span class=&quot;cn&quot;&gt;__DIR__&lt;/span&gt;))&lt;span class=&quot;ot&quot;&gt;;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb7-4&quot;&gt;&lt;a href=&quot;#cb7-4&quot;&gt;&lt;/a&gt;&lt;span class=&quot;kw&quot;&gt;require_once&lt;/span&gt; &lt;span class=&quot;cn&quot;&gt;LIBRARY_PATH&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;#39;/simplediff/simplediff.php&amp;#39;&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt;;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb7-5&quot;&gt;&lt;a href=&quot;#cb7-5&quot;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&quot;cb7-6&quot;&gt;&lt;a href=&quot;#cb7-6&quot;&gt;&lt;/a&gt;&lt;span class=&quot;kw&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;cn&quot;&gt;A&lt;/span&gt;ppconfig_IndexController &lt;span class=&quot;kw&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;cn&quot;&gt;Z&lt;/span&gt;end_Controller_Action&lt;/span&gt;
&lt;span id=&quot;cb7-7&quot;&gt;&lt;a href=&quot;#cb7-7&quot;&gt;&lt;/a&gt;{&lt;/span&gt;
&lt;span id=&quot;cb7-8&quot;&gt;&lt;a href=&quot;#cb7-8&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;kw&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;va&quot;&gt;$entry&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt;;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb7-9&quot;&gt;&lt;a href=&quot;#cb7-9&quot;&gt;&lt;/a&gt;    &lt;/span&gt;
&lt;span id=&quot;cb7-10&quot;&gt;&lt;a href=&quot;#cb7-10&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;kw&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;va&quot;&gt;$mimeTypes&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;array&lt;/span&gt;(&lt;/span&gt;
&lt;span id=&quot;cb7-11&quot;&gt;&lt;a href=&quot;#cb7-11&quot;&gt;&lt;/a&gt;        &lt;span class=&quot;st&quot;&gt;&amp;#39;.html&amp;#39;&lt;/span&gt; =&amp;gt; &lt;span class=&quot;st&quot;&gt;&amp;#39;text/html&amp;#39;&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt;,&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb7-12&quot;&gt;&lt;a href=&quot;#cb7-12&quot;&gt;&lt;/a&gt;        &lt;span class=&quot;st&quot;&gt;&amp;#39;.json&amp;#39;&lt;/span&gt; =&amp;gt; &lt;span class=&quot;st&quot;&gt;&amp;#39;application/json&amp;#39;&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt;,&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb7-13&quot;&gt;&lt;a href=&quot;#cb7-13&quot;&gt;&lt;/a&gt;    )&lt;span class=&quot;ot&quot;&gt;;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb7-14&quot;&gt;&lt;a href=&quot;#cb7-14&quot;&gt;&lt;/a&gt;    &lt;/span&gt;
&lt;span id=&quot;cb7-15&quot;&gt;&lt;a href=&quot;#cb7-15&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;kw&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;function&lt;/span&gt; preDispatch()&lt;/span&gt;
&lt;span id=&quot;cb7-16&quot;&gt;&lt;a href=&quot;#cb7-16&quot;&gt;&lt;/a&gt;    {&lt;/span&gt;
&lt;span id=&quot;cb7-17&quot;&gt;&lt;a href=&quot;#cb7-17&quot;&gt;&lt;/a&gt;        &lt;span class=&quot;va&quot;&gt;$request&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;va&quot;&gt;$this&lt;/span&gt;-&amp;gt;getRequest()&lt;span class=&quot;ot&quot;&gt;;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb7-18&quot;&gt;&lt;a href=&quot;#cb7-18&quot;&gt;&lt;/a&gt;        &lt;span class=&quot;va&quot;&gt;$request&lt;/span&gt;-&amp;gt;setParams(&lt;span class=&quot;cn&quot;&gt;U&lt;/span&gt;rl_Model_Url::fetch(&lt;span class=&quot;va&quot;&gt;$request&lt;/span&gt;-&amp;gt;getParam(&lt;span class=&quot;st&quot;&gt;&amp;#39;resource&amp;#39;&lt;/span&gt;))-&amp;gt;getParams())&lt;span class=&quot;ot&quot;&gt;;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb7-19&quot;&gt;&lt;a href=&quot;#cb7-19&quot;&gt;&lt;/a&gt;        &lt;span class=&quot;va&quot;&gt;$this&lt;/span&gt;-&amp;gt;entry &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;cn&quot;&gt;P&lt;/span&gt;&lt;span class=&quot;er&quot;&gt;4&lt;/span&gt;Cms_Content::fetch(&lt;span class=&quot;va&quot;&gt;$request&lt;/span&gt;-&amp;gt;getParam(&lt;span class=&quot;st&quot;&gt;&amp;#39;id&amp;#39;&lt;/span&gt;)&lt;span class=&quot;ot&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;array&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&amp;#39;includeDeleted&amp;#39;&lt;/span&gt; =&amp;gt; &lt;span class=&quot;kw&quot;&gt;true&lt;/span&gt;))&lt;span class=&quot;ot&quot;&gt;;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb7-20&quot;&gt;&lt;a href=&quot;#cb7-20&quot;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&quot;cb7-21&quot;&gt;&lt;a href=&quot;#cb7-21&quot;&gt;&lt;/a&gt;    &lt;/span&gt;
&lt;span id=&quot;cb7-22&quot;&gt;&lt;a href=&quot;#cb7-22&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;kw&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;function&lt;/span&gt; indexAction()&lt;/span&gt;
&lt;span id=&quot;cb7-23&quot;&gt;&lt;a href=&quot;#cb7-23&quot;&gt;&lt;/a&gt;    {&lt;/span&gt;
&lt;span id=&quot;cb7-24&quot;&gt;&lt;a href=&quot;#cb7-24&quot;&gt;&lt;/a&gt;        &lt;span class=&quot;va&quot;&gt;$this&lt;/span&gt;-&amp;gt;getResponse()-&amp;gt;setHeader(&lt;span class=&quot;st&quot;&gt;&amp;#39;Content-Type&amp;#39;&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;va&quot;&gt;$this&lt;/span&gt;-&amp;gt;getMimeType()&lt;span class=&quot;ot&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;true&lt;/span&gt;)&lt;span class=&quot;ot&quot;&gt;;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb7-25&quot;&gt;&lt;a href=&quot;#cb7-25&quot;&gt;&lt;/a&gt;        &lt;span class=&quot;va&quot;&gt;$this&lt;/span&gt;-&amp;gt;view-&amp;gt;entry &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;va&quot;&gt;$this&lt;/span&gt;-&amp;gt;entry&lt;span class=&quot;ot&quot;&gt;;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb7-26&quot;&gt;&lt;a href=&quot;#cb7-26&quot;&gt;&lt;/a&gt;        &lt;/span&gt;
&lt;span id=&quot;cb7-27&quot;&gt;&lt;a href=&quot;#cb7-27&quot;&gt;&lt;/a&gt;        &lt;span class=&quot;cf&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;va&quot;&gt;$this&lt;/span&gt;-&amp;gt;getRequest()-&amp;gt;isPost()) {&lt;/span&gt;
&lt;span id=&quot;cb7-28&quot;&gt;&lt;a href=&quot;#cb7-28&quot;&gt;&lt;/a&gt;            &lt;span class=&quot;va&quot;&gt;$this&lt;/span&gt;-&amp;gt;entry-&amp;gt;setValue(&lt;span class=&quot;st&quot;&gt;&amp;#39;content&amp;#39;&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;va&quot;&gt;$this&lt;/span&gt;-&amp;gt;getJsonPost())&lt;span class=&quot;ot&quot;&gt;;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb7-29&quot;&gt;&lt;a href=&quot;#cb7-29&quot;&gt;&lt;/a&gt;            &lt;span class=&quot;va&quot;&gt;$this&lt;/span&gt;-&amp;gt;entry-&amp;gt;save(&lt;span class=&quot;va&quot;&gt;$this&lt;/span&gt;-&amp;gt;getRequest()-&amp;gt;getParam(&lt;span class=&quot;st&quot;&gt;&amp;#39;message&amp;#39;&lt;/span&gt;))&lt;span class=&quot;ot&quot;&gt;;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb7-30&quot;&gt;&lt;a href=&quot;#cb7-30&quot;&gt;&lt;/a&gt;        }&lt;/span&gt;
&lt;span id=&quot;cb7-31&quot;&gt;&lt;a href=&quot;#cb7-31&quot;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&quot;cb7-32&quot;&gt;&lt;a href=&quot;#cb7-32&quot;&gt;&lt;/a&gt;    &lt;/span&gt;
&lt;span id=&quot;cb7-33&quot;&gt;&lt;a href=&quot;#cb7-33&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;kw&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;function&lt;/span&gt; getMimeType()&lt;/span&gt;
&lt;span id=&quot;cb7-34&quot;&gt;&lt;a href=&quot;#cb7-34&quot;&gt;&lt;/a&gt;    {&lt;/span&gt;
&lt;span id=&quot;cb7-35&quot;&gt;&lt;a href=&quot;#cb7-35&quot;&gt;&lt;/a&gt;        &lt;span class=&quot;va&quot;&gt;$url&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;va&quot;&gt;$this&lt;/span&gt;-&amp;gt;entry-&amp;gt;getValue(&lt;span class=&quot;st&quot;&gt;&amp;#39;url&amp;#39;&lt;/span&gt;)&lt;span class=&quot;ot&quot;&gt;;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb7-36&quot;&gt;&lt;a href=&quot;#cb7-36&quot;&gt;&lt;/a&gt;        &lt;span class=&quot;va&quot;&gt;$suffix&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;substr&lt;/span&gt;(&lt;span class=&quot;va&quot;&gt;$url&lt;/span&gt;[&lt;span class=&quot;st&quot;&gt;&amp;#39;path&amp;#39;&lt;/span&gt;]&lt;span class=&quot;ot&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;strrpos&lt;/span&gt;(&lt;span class=&quot;va&quot;&gt;$url&lt;/span&gt;[&lt;span class=&quot;st&quot;&gt;&amp;#39;path&amp;#39;&lt;/span&gt;]&lt;span class=&quot;ot&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;#39;.&amp;#39;&lt;/span&gt;))&lt;span class=&quot;ot&quot;&gt;;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb7-37&quot;&gt;&lt;a href=&quot;#cb7-37&quot;&gt;&lt;/a&gt;        &lt;/span&gt;
&lt;span id=&quot;cb7-38&quot;&gt;&lt;a href=&quot;#cb7-38&quot;&gt;&lt;/a&gt;        &lt;span class=&quot;cf&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;fu&quot;&gt;array_key_exists&lt;/span&gt;(&lt;span class=&quot;va&quot;&gt;$suffix&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;va&quot;&gt;$this&lt;/span&gt;-&amp;gt;mimeTypes)) {&lt;/span&gt;
&lt;span id=&quot;cb7-39&quot;&gt;&lt;a href=&quot;#cb7-39&quot;&gt;&lt;/a&gt;            &lt;span class=&quot;cf&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;va&quot;&gt;$this&lt;/span&gt;-&amp;gt;mimeTypes[&lt;span class=&quot;va&quot;&gt;$suffix&lt;/span&gt;]&lt;span class=&quot;ot&quot;&gt;;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb7-40&quot;&gt;&lt;a href=&quot;#cb7-40&quot;&gt;&lt;/a&gt;        } &lt;span class=&quot;cf&quot;&gt;else&lt;/span&gt; {&lt;/span&gt;
&lt;span id=&quot;cb7-41&quot;&gt;&lt;a href=&quot;#cb7-41&quot;&gt;&lt;/a&gt;            &lt;span class=&quot;cf&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;#39;text/plain&amp;#39;&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt;;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb7-42&quot;&gt;&lt;a href=&quot;#cb7-42&quot;&gt;&lt;/a&gt;        }&lt;/span&gt;
&lt;span id=&quot;cb7-43&quot;&gt;&lt;a href=&quot;#cb7-43&quot;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&quot;cb7-44&quot;&gt;&lt;a href=&quot;#cb7-44&quot;&gt;&lt;/a&gt;    &lt;/span&gt;
&lt;span id=&quot;cb7-45&quot;&gt;&lt;a href=&quot;#cb7-45&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;kw&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;function&lt;/span&gt; diffsAction()&lt;/span&gt;
&lt;span id=&quot;cb7-46&quot;&gt;&lt;a href=&quot;#cb7-46&quot;&gt;&lt;/a&gt;    {&lt;/span&gt;
&lt;span id=&quot;cb7-47&quot;&gt;&lt;a href=&quot;#cb7-47&quot;&gt;&lt;/a&gt;        &lt;span class=&quot;va&quot;&gt;$this&lt;/span&gt;-&amp;gt;getResponse()-&amp;gt;setHeader(&lt;span class=&quot;st&quot;&gt;&amp;#39;Content-Type&amp;#39;&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;#39;text/html&amp;#39;&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;true&lt;/span&gt;)&lt;span class=&quot;ot&quot;&gt;;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb7-48&quot;&gt;&lt;a href=&quot;#cb7-48&quot;&gt;&lt;/a&gt;        &lt;span class=&quot;va&quot;&gt;$this&lt;/span&gt;-&amp;gt;view-&amp;gt;diffs &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; htmlDiff(&lt;span class=&quot;va&quot;&gt;$this&lt;/span&gt;-&amp;gt;entry-&amp;gt;getValue(&lt;span class=&quot;st&quot;&gt;&amp;#39;content&amp;#39;&lt;/span&gt;)&lt;span class=&quot;ot&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;va&quot;&gt;$this&lt;/span&gt;-&amp;gt;getJsonPost())&lt;span class=&quot;ot&quot;&gt;;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb7-49&quot;&gt;&lt;a href=&quot;#cb7-49&quot;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&quot;cb7-50&quot;&gt;&lt;a href=&quot;#cb7-50&quot;&gt;&lt;/a&gt;    &lt;/span&gt;
&lt;span id=&quot;cb7-51&quot;&gt;&lt;a href=&quot;#cb7-51&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;kw&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;function&lt;/span&gt; postDispatch()&lt;/span&gt;
&lt;span id=&quot;cb7-52&quot;&gt;&lt;a href=&quot;#cb7-52&quot;&gt;&lt;/a&gt;    {&lt;/span&gt;
&lt;span id=&quot;cb7-53&quot;&gt;&lt;a href=&quot;#cb7-53&quot;&gt;&lt;/a&gt;        &lt;span class=&quot;va&quot;&gt;$this&lt;/span&gt;-&amp;gt;getHelper(&lt;span class=&quot;st&quot;&gt;&amp;#39;layout&amp;#39;&lt;/span&gt;)-&amp;gt;disableLayout()&lt;span class=&quot;ot&quot;&gt;;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb7-54&quot;&gt;&lt;a href=&quot;#cb7-54&quot;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&quot;cb7-55&quot;&gt;&lt;a href=&quot;#cb7-55&quot;&gt;&lt;/a&gt;    &lt;/span&gt;
&lt;span id=&quot;cb7-56&quot;&gt;&lt;a href=&quot;#cb7-56&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;kw&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;function&lt;/span&gt; getJsonPost()&lt;/span&gt;
&lt;span id=&quot;cb7-57&quot;&gt;&lt;a href=&quot;#cb7-57&quot;&gt;&lt;/a&gt;    {&lt;/span&gt;
&lt;span id=&quot;cb7-58&quot;&gt;&lt;a href=&quot;#cb7-58&quot;&gt;&lt;/a&gt;        &lt;span class=&quot;cf&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;va&quot;&gt;$this&lt;/span&gt;-&amp;gt;getRequest()-&amp;gt;isPost()) {&lt;/span&gt;
&lt;span id=&quot;cb7-59&quot;&gt;&lt;a href=&quot;#cb7-59&quot;&gt;&lt;/a&gt;            &lt;span class=&quot;cf&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;va&quot;&gt;$this&lt;/span&gt;-&amp;gt;prettyPrint(&lt;span class=&quot;fu&quot;&gt;file_get_contents&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&amp;#39;php://input&amp;#39;&lt;/span&gt;))&lt;span class=&quot;ot&quot;&gt;;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb7-60&quot;&gt;&lt;a href=&quot;#cb7-60&quot;&gt;&lt;/a&gt;        } &lt;span class=&quot;cf&quot;&gt;else&lt;/span&gt; {&lt;/span&gt;
&lt;span id=&quot;cb7-61&quot;&gt;&lt;a href=&quot;#cb7-61&quot;&gt;&lt;/a&gt;            &lt;span class=&quot;cf&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;bu&quot;&gt;Exception&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&amp;#39;Can&lt;/span&gt;&lt;span class=&quot;sc&quot;&gt;\&amp;#39;&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;t get JSON without POST&amp;#39;&lt;/span&gt;)&lt;span class=&quot;ot&quot;&gt;;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb7-62&quot;&gt;&lt;a href=&quot;#cb7-62&quot;&gt;&lt;/a&gt;        }&lt;/span&gt;
&lt;span id=&quot;cb7-63&quot;&gt;&lt;a href=&quot;#cb7-63&quot;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&quot;cb7-64&quot;&gt;&lt;a href=&quot;#cb7-64&quot;&gt;&lt;/a&gt;    &lt;/span&gt;
&lt;span id=&quot;cb7-65&quot;&gt;&lt;a href=&quot;#cb7-65&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;kw&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;function&lt;/span&gt; prettyPrint(&lt;span class=&quot;va&quot;&gt;$json&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&quot;cb7-66&quot;&gt;&lt;a href=&quot;#cb7-66&quot;&gt;&lt;/a&gt;    {&lt;/span&gt;
&lt;span id=&quot;cb7-67&quot;&gt;&lt;a href=&quot;#cb7-67&quot;&gt;&lt;/a&gt;        &lt;span class=&quot;va&quot;&gt;$array&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;cn&quot;&gt;Z&lt;/span&gt;end_Json::decode(&lt;span class=&quot;va&quot;&gt;$json&lt;/span&gt;)&lt;span class=&quot;ot&quot;&gt;;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb7-68&quot;&gt;&lt;a href=&quot;#cb7-68&quot;&gt;&lt;/a&gt;        &lt;span class=&quot;va&quot;&gt;$this&lt;/span&gt;-&amp;gt;&lt;span class=&quot;fu&quot;&gt;sort&lt;/span&gt;(&lt;span class=&quot;va&quot;&gt;$array&lt;/span&gt;)&lt;span class=&quot;ot&quot;&gt;;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb7-69&quot;&gt;&lt;a href=&quot;#cb7-69&quot;&gt;&lt;/a&gt;        &lt;/span&gt;
&lt;span id=&quot;cb7-70&quot;&gt;&lt;a href=&quot;#cb7-70&quot;&gt;&lt;/a&gt;        &lt;span class=&quot;cf&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;cn&quot;&gt;Z&lt;/span&gt;end_Json::prettyPrint(&lt;span class=&quot;cn&quot;&gt;Z&lt;/span&gt;end_Json::encode(&lt;span class=&quot;va&quot;&gt;$array&lt;/span&gt;)&lt;span class=&quot;ot&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;array&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&amp;#39;indent&amp;#39;&lt;/span&gt; =&amp;gt; &lt;span class=&quot;st&quot;&gt;&amp;#39; &amp;#39;&lt;/span&gt;))&lt;span class=&quot;ot&quot;&gt;;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb7-71&quot;&gt;&lt;a href=&quot;#cb7-71&quot;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&quot;cb7-72&quot;&gt;&lt;a href=&quot;#cb7-72&quot;&gt;&lt;/a&gt;    &lt;/span&gt;
&lt;span id=&quot;cb7-73&quot;&gt;&lt;a href=&quot;#cb7-73&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;kw&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;sort&lt;/span&gt;(&lt;span class=&quot;dt&quot;&gt;array&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;va&quot;&gt;$array&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&quot;cb7-74&quot;&gt;&lt;a href=&quot;#cb7-74&quot;&gt;&lt;/a&gt;    {&lt;/span&gt;
&lt;span id=&quot;cb7-75&quot;&gt;&lt;a href=&quot;#cb7-75&quot;&gt;&lt;/a&gt;        &lt;span class=&quot;cf&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;fu&quot;&gt;count&lt;/span&gt;(&lt;span class=&quot;fu&quot;&gt;array_filter&lt;/span&gt;(&lt;span class=&quot;fu&quot;&gt;array_keys&lt;/span&gt;(&lt;span class=&quot;va&quot;&gt;$array&lt;/span&gt;)&lt;span class=&quot;ot&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;#39;is_string&amp;#39;&lt;/span&gt;)) &lt;span class=&quot;op&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;) {&lt;/span&gt;
&lt;span id=&quot;cb7-76&quot;&gt;&lt;a href=&quot;#cb7-76&quot;&gt;&lt;/a&gt;            &lt;span class=&quot;fu&quot;&gt;ksort&lt;/span&gt;(&lt;span class=&quot;va&quot;&gt;$array&lt;/span&gt;)&lt;span class=&quot;ot&quot;&gt;;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb7-77&quot;&gt;&lt;a href=&quot;#cb7-77&quot;&gt;&lt;/a&gt;        }&lt;/span&gt;
&lt;span id=&quot;cb7-78&quot;&gt;&lt;a href=&quot;#cb7-78&quot;&gt;&lt;/a&gt;        &lt;/span&gt;
&lt;span id=&quot;cb7-79&quot;&gt;&lt;a href=&quot;#cb7-79&quot;&gt;&lt;/a&gt;        &lt;span class=&quot;cf&quot;&gt;foreach&lt;/span&gt;(&lt;span class=&quot;va&quot;&gt;$array&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;va&quot;&gt;$value&lt;/span&gt;) {&lt;/span&gt;
&lt;span id=&quot;cb7-80&quot;&gt;&lt;a href=&quot;#cb7-80&quot;&gt;&lt;/a&gt;            &lt;span class=&quot;cf&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;fu&quot;&gt;is_array&lt;/span&gt;(&lt;span class=&quot;va&quot;&gt;$value&lt;/span&gt;)) {&lt;/span&gt;
&lt;span id=&quot;cb7-81&quot;&gt;&lt;a href=&quot;#cb7-81&quot;&gt;&lt;/a&gt;                &lt;span class=&quot;va&quot;&gt;$this&lt;/span&gt;-&amp;gt;&lt;span class=&quot;fu&quot;&gt;sort&lt;/span&gt;(&lt;span class=&quot;va&quot;&gt;$value&lt;/span&gt;)&lt;span class=&quot;ot&quot;&gt;;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb7-82&quot;&gt;&lt;a href=&quot;#cb7-82&quot;&gt;&lt;/a&gt;            }&lt;/span&gt;
&lt;span id=&quot;cb7-83&quot;&gt;&lt;a href=&quot;#cb7-83&quot;&gt;&lt;/a&gt;        }&lt;/span&gt;
&lt;span id=&quot;cb7-84&quot;&gt;&lt;a href=&quot;#cb7-84&quot;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&quot;cb7-85&quot;&gt;&lt;a href=&quot;#cb7-85&quot;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id=&quot;angularjs&quot;&gt;AngularJS&lt;/h2&gt;
&lt;p&gt;After all files are in place, Chronicle needs to be notified that the new module exists by going to “Manage” &amp;gt; “Modules”, where the “Appconfig” module will be listed if all goes well :) Both assets will now be viewable from &lt;code&gt;http://localhost/appconfig/index.html&lt;/code&gt; and &lt;code&gt;http://localhost/appconfig/stack_configuration.json&lt;/code&gt;. AngularJS’ &lt;a href=&quot;http://code.angularjs.org/0.9.19/docs-0.9.19/#!/api/angular.service.resource&quot;&gt;resource service&lt;/a&gt; is used in &lt;code&gt;index.html&lt;/code&gt; to fetch stack_configuration.json and post changes back.&lt;/p&gt;
&lt;p&gt;From &lt;code&gt;http://localhost/appconfig/index.html&lt;/code&gt;, the data from stack_configuration.json is loaded into the form:&lt;/p&gt;
&lt;figure id=&quot;img-config-form-aside&quot; class=&quot;image&quot;&gt;
  &lt;p class=&quot;content&quot;&gt;
    &lt;a href=&quot;/images/app-config/start.png&quot; class=&quot;image-link&quot;&gt;
      &lt;img src=&quot;/images/app-config/start.png&quot;
        id=&quot;img-config-form&quot;
        
        &gt;
    &lt;/a&gt;
  &lt;/p&gt;
  
&lt;/figure&gt;
&lt;p&gt;Edits to stack_configuration.json can be made using the form, and the diffs viewed by clicking on “View Diffs”:&lt;/p&gt;
&lt;figure id=&quot;img-config-diffs-aside&quot; class=&quot;image&quot;&gt;
  &lt;p class=&quot;content&quot;&gt;
    &lt;a href=&quot;/images/app-config/diffs.png&quot; class=&quot;image-link&quot;&gt;
      &lt;img src=&quot;/images/app-config/diffs.png&quot;
        id=&quot;img-config-diffs&quot;
        
        &gt;
    &lt;/a&gt;
  &lt;/p&gt;
  
&lt;/figure&gt;
&lt;p&gt;The changes can be saved by entering a commit message and clicking “Commit Changes”. After which, clicking “View Diffs” will show no changes:&lt;/p&gt;
&lt;figure id=&quot;img-config-commit-aside&quot; class=&quot;image&quot;&gt;
  &lt;p class=&quot;content&quot;&gt;
    &lt;a href=&quot;/images/app-config/diffs-after-commit.png&quot; class=&quot;image-link&quot;&gt;
      &lt;img src=&quot;/images/app-config/diffs-after-commit.png&quot;
        id=&quot;img-config-commit&quot;
        
        &gt;
    &lt;/a&gt;
  &lt;/p&gt;
  
&lt;/figure&gt;
&lt;p&gt;To show that edits have in fact been made to stack_configuration.json, go to &lt;code&gt;http://localhost/stack_configuration.json&lt;/code&gt;, select “History” and click on ” History List”:&lt;/p&gt;
&lt;figure id=&quot;img-config-history-aside&quot; class=&quot;image&quot;&gt;
  &lt;p class=&quot;content&quot;&gt;
    &lt;a href=&quot;/images/app-config/history.png&quot; class=&quot;image-link&quot;&gt;
      &lt;img src=&quot;/images/app-config/history.png&quot;
        id=&quot;img-config-history&quot;
        
        &gt;
    &lt;/a&gt;
  &lt;/p&gt;
  
&lt;/figure&gt;
&lt;p&gt;Chronicle also provides an interface for viewing diffs between revisions:&lt;/p&gt;
&lt;figure id=&quot;img-config-revisions-aside&quot; class=&quot;image&quot;&gt;
  &lt;p class=&quot;content&quot;&gt;
    &lt;a href=&quot;/images/app-config/history-diffs.png&quot; class=&quot;image-link&quot;&gt;
      &lt;img src=&quot;/images/app-config/history-diffs.png&quot;
        id=&quot;img-config-revisions&quot;
        
        &gt;
    &lt;/a&gt;
  &lt;/p&gt;
  
&lt;/figure&gt;
&lt;h2 id=&quot;disk-usage&quot;&gt;Disk Usage&lt;/h2&gt;
&lt;p&gt;Something to remember in using Chronicle is that each resource requested from Perforce is written to disk before being served to the client. This means that for each request to &lt;code&gt;index.html&lt;/code&gt;, Chronicle allocates a new Perforce workspace, checks out the associated file, serves it to the client, then deletes the file and the workspace at the end of the request. This allocate/checkout/serve/delete cycle executes for stack_configuration.json and every other resource in the system.&lt;/p&gt;
&lt;h2 id=&quot;todo&quot;&gt;&lt;span class=&quot;citation&quot; data-cites=&quot;TODO&quot;&gt;@TODO&lt;/span&gt;&lt;/h2&gt;
&lt;h3 id=&quot;security&quot;&gt;Security!&lt;/h3&gt;
&lt;p&gt;There’s one major flaw with the appconfig module: it performs zero access checks. By default, Chronicle can be configured to disallow anonymous access by going to “Manage” &amp;gt; “Permissions” and deselecting all permissions for ” anonymous” and “members”. Logging out and attempting to access either &lt;code&gt;http://localhost/appconfig/stack_configuration.json&lt;/code&gt; or &lt;code&gt;http://localhost/appconfig/index.html&lt;/code&gt; will now give an error page and prompt you to log in. Clicking “New User” will also give an error, as anonymous users don’t have the permission to create users.&lt;/p&gt;
&lt;p&gt;Access rights on content are checked by the content module, but are also hard-coded in the associated controllers as IF-statements. A better solution will be required for proper access management in the appconfig module.&lt;/p&gt;
&lt;h3 id=&quot;better-integration&quot;&gt;Better integration&lt;/h3&gt;
&lt;p&gt;Chronicle’s content module provides JSON integration for most of its actions, but these mostly exist to support the &lt;a href=&quot;http://dojotoolkit.org/&quot;&gt;Dojo Toolkit&lt;/a&gt;-enabled front-end. Integrating with these actions over JSON requires detailed knowledge of Chronicle’s form structures.&lt;/p&gt;
&lt;p&gt;Chronicle has some nice interfaces for viewing diffs. If I could call those up from &lt;code&gt;index.html&lt;/code&gt; I would be major happy :)&lt;/p&gt;
&lt;h3 id=&quot;automatic-creation-of-plaintext-content-type&quot;&gt;Automatic creation of plaintext content type&lt;/h3&gt;
&lt;p&gt;Before the appconfig module is usable, the plaintext content type has to be created. I would like to automate creation of the plaintext content type when the module is first enabled.&lt;/p&gt;
&lt;h3 id=&quot;making-applications-aware-of-updates-to-configuration&quot;&gt;Making applications aware of updates to configuration&lt;/h3&gt;
&lt;p&gt;When stack_configuration.json is updated, there’s no way to notify applications to the change, and no interface provided so they may poll for changes. I’m not entirely sure at this point what an appropriate solution would look like. In order to complete the concept, I’d first have to create a client app dependent on that configuration.&lt;/p&gt;
&lt;h3 id=&quot;better-interfaces-for-manipulating-plaintext-assets&quot;&gt;Better interfaces for manipulating plaintext assets&lt;/h3&gt;
&lt;p&gt;I had to fiddle with &lt;code&gt;index.html&lt;/code&gt; quite a bit. This basically involved editing a local copy of &lt;code&gt;index.html&lt;/code&gt;, then pasting the entire contents into the associated form in Chronicle. I have not tried checking out &lt;code&gt;index.html&lt;/code&gt; directly from Perforce, and I imagine that any edits would need to be made within Chronicle. GitHub offers an in-browser raw editor, and something like that would be real handy in Chronicle.&lt;/p&gt;
&lt;h3 id=&quot;handling-conflicts&quot;&gt;Handling conflicts&lt;/h3&gt;
&lt;p&gt;There is no logic in the appconfig module to catch conflicts if there are two users editing the same file. Conflicts are detectable because an exception is thrown if there is a conflict, but I’m not sure what the workflow for resolution is in Chronicle terms, or how to integrate with it. Who wins?&lt;/p&gt;
&lt;h3 id=&quot;working-with-branches&quot;&gt;Working with branches&lt;/h3&gt;
&lt;p&gt;I did not take the time to see how Chronicle manages branches. I will need to verify that Chronicle and the appconfig module can work with development, staging, and production branches, with maintained divergence. For example, we’re still trying to figure out how to attach visual clients like P4V to the repository and work independently of Chronicle.&lt;/p&gt;
&lt;h2 id=&quot;kudos&quot;&gt;Kudos&lt;/h2&gt;
&lt;p&gt;I would like to thank the guys at Perforce for their assistance and answering all my questions as I worked with Chronicle, especially Randy Defauw.&lt;/p&gt;
&lt;h2 id=&quot;update-06272021&quot;&gt;Update 06/27/2021&lt;/h2&gt;
&lt;p&gt;This is the first blog post I have ever written. Paul Hammant, who I had met in other contexts previously, happened to be working out of the ThoughtWorks office in Dallas, TX the very same day I started at ThoughtWorks. He asked me if I knew PHP, which I did, and set me off to explore Perforce Chronicle as a solution for managing configuration.&lt;/p&gt;
&lt;p&gt;I had never written professionally before or been aware of configuration management: I was very lucky to explore a passion space that Paul has worked within for a very long time. I don’t believe I ever gave him a proper thanks. He gave me an opportunity that probably not a lot of people get in their early careers, and it was an invaluable experience that I learned a lot from and think about fairly often.&lt;/p&gt;
&lt;p&gt;The other posts in this series were also written with guidance from Paul:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;/blog/2012/11/16/scm-backed-application-configuration-with-perforce&quot;&gt;SCM-Backed Application Configuration with Perforce&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;/blog/2012/11/20/app-config-app-in-action&quot;&gt;App-Config-App in Action&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;/blog/2012/11/28/promoting-changes-with-app-config-app&quot;&gt;Promoting changes with App-Config-App&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The subject of configuration as described in these posts is still fresh even after nearly ten years. Even now configuration as code still doesn’t have a perfect solution, though products have become available that make managing configuration easier. Changing configuration in a running process as a general solution remains elusive, as supporting it imposes a lot of constraints on design.&lt;/p&gt;
&lt;p&gt;On a more personal note: today is Pride. This is the first Pride I’ve ever participated in and only in the last two years have I felt safe enough to come out in circles beyond close friends. I was out to Paul but only as a detail I confided in passing. When I was working with Paul on these posts he advised that I should consider relocating to the Bay Area. In January, 2013, I moved to San Francisco. Discovering my own life as a &lt;em&gt;person&lt;/em&gt; was set by Paul being brave enough to share a deeply personal piece of advice. I’m so thankful he said it, and I’m glad I listened.&lt;/p&gt;</content
    </entry>
  </feed>
